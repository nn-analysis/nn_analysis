{"version": "0.9.5", "fields": ["qualname", "fullname", "doc"], "ref": "fullname", "documentStore": {"docs": {"nn_tuning": {"fullname": "nn_tuning", "modulename": "nn_tuning", "qualname": "", "type": "module", "doc": "<p>Analyse neural networks for feature tuning.</p>\n\n<h2 id=\"installing-and-configuring-nn_tuning\">Installing and configuring nn_tuning</h2>\n\n<p>Install nn_analysis using the following <code>pip</code> command. This requires python &gt; 3.6.</p>\n\n<pre><code>$ pip install nn_tuning\n</code></pre>\n\n<p>If you wish to use the plotting functions in any of the classes, you need to install Matplotlib. To do so you can use the following command:</p>\n\n<pre><code>$ pip install matplotlib\n</code></pre>\n\n<p>Depending on the type of neural network you want to analyse you will need to install PyTorch or TensorFlow.\nThe required packages per network are listed in the table below.\nWhen importing the network class, if the required packages are not installed, the error should also let you know what packages it expects.</p>\n\n<table>\n<thead>\n<tr>\n  <th>Network</th>\n  <th>Package</th>\n  <th>Version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td>AlexNet</td>\n  <td>pytorch<br>pytorchvision</td>\n  <td>latest</td>\n</tr>\n<tr>\n  <td>PredNet</td>\n  <td>tensorflow<br>python</td>\n  <td>&lt; 2<br>3.6.*</td>\n</tr>\n</tbody>\n</table>\n\n<p>To install PyTorch use the following <code>pip</code> command:</p>\n\n<pre><code>$ pip install pytorch\n</code></pre>\n\n<p>To install tensorflow use the following <code>pip</code> command:</p>\n\n<pre><code>$ pip install tensorflow.\n</code></pre>\n\n<p>The PredNet specific environment can also be installed by using the prednet variant of the package in <code>pip</code> using the following <code>pip</code> command.</p>\n\n<pre><code>$ pip install nn_analysis-prednet\n</code></pre>\n\n<h2 id=\"getting-started\">Getting started</h2>\n\n<p>To get started first import the package and the inputs and networks you want to use.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">nn_tuning</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">nn_tuning.networks.prednet</span> <span class=\"kn\">import</span> <span class=\"n\">Prednet</span>\n</code></pre></div>\n\n<p>Define a table and a database to store the results in and initialise the storage manager.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;activations_table&#39;</span>\n<span class=\"n\">database</span> <span class=\"o\">=</span> <span class=\"n\">Database</span><span class=\"p\">(</span><span class=\"s2\">&quot;/path/to/database/folder/&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">storage_manager</span> <span class=\"o\">=</span> <span class=\"n\">StorageManager</span><span class=\"p\">(</span><span class=\"n\">database</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"getting-the-activations\">Getting the activations</h3>\n\n<p>Now we need to set up an input manager. The input will provide stimuli for the network using the input generator. In order to make a new input generator please see (link to that part of the documentation).\nHere we will use the example of the build in <code>PRFInputManager</code>.</p>\n\n<p>The input manager requires an input shape. This is the shape of the first layer in the network you want to use.\nIt is also possible to set a verbose flag for the input generator. By default, this flag is False.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"n\">input_shape</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">128</span><span class=\"p\">,</span><span class=\"mi\">160</span><span class=\"p\">)</span>\n<span class=\"n\">prf_stimulus_generator</span> <span class=\"o\">=</span> <span class=\"n\">PRFStimulusGenerator</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;prf_input&#39;</span><span class=\"p\">,</span> <span class=\"n\">storage_manager</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n<span class=\"n\">prf_input_manager</span> <span class=\"o\">=</span> <span class=\"n\">InputManager</span><span class=\"p\">(</span><span class=\"n\">TableSet</span><span class=\"p\">(</span><span class=\"s1\">&#39;prf_input&#39;</span><span class=\"p\">,</span> <span class=\"n\">database</span><span class=\"p\">),</span> <span class=\"n\">input_shape</span><span class=\"p\">,</span> <span class=\"n\">prf_stimulus_generator</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>We then initialise the network. \nIn this case I am using the prednet network as an example. \nThe <code>json_file</code> and <code>weight_file</code> variables are strings with the location of those files. (You can get these files <a href=\"https://www.dropbox.com/s/rpwlnn6j39jjme4/kitti_data.zip?dl=0\">here</a>)\nThe presentation variable determines the way stimuli are presented to the network. \nThis way it is possible to get intermediates from the recurrent process rather than just the final result.\nBy default the network uses an iterative presentation and takes the mean from all the recorded iterative activations as an output.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">network</span> <span class=\"o\">=</span> <span class=\"n\">Prednet</span><span class=\"p\">(</span><span class=\"n\">json_file</span><span class=\"p\">,</span> <span class=\"n\">weights_file</span><span class=\"p\">,</span> <span class=\"n\">presentation</span><span class=\"o\">=</span><span class=\"s1\">&#39;iterative&#39;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>We then define an output manager using the network, storage manager, and the input manager.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">output_manager</span> <span class=\"o\">=</span> <span class=\"n\">OutputManager</span><span class=\"p\">(</span><span class=\"n\">network</span><span class=\"p\">,</span> <span class=\"n\">storage_manager</span><span class=\"p\">,</span> <span class=\"n\">prf_input_manager</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>Now we can present the stimuli to the network batch wise. This step can take some time.\nThe resume parameter makes the network resume in case the program is halted intermediately.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">output_manager</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">resume</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"fitting-activations-to-a-tuning-function\">Fitting activations to a tuning function</h3>\n\n<p>First open the table containing the activations by using the storage manager.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">responses_table_set</span> <span class=\"o\">=</span> <span class=\"n\">storage_manager</span><span class=\"o\">.</span><span class=\"n\">open_table</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>Next initialise the fitting manager</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">fitting_manager</span> <span class=\"o\">=</span> <span class=\"n\">FittingManager</span><span class=\"p\">(</span><span class=\"n\">storage_manager</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>Now we need some variables that are required for the fitting manager to work.</p>\n\n<p>The <code>stim_x</code>, <code>stim_y</code>, and <code>stimulus</code> variables are used in the fitting procedure to generate a prediction from the function parameters it is testing. <code>stim_x</code> and <code>stim_y</code> both contain the feature representation of the thing you were trying to present.\nSo in the case of position data <code>stim_x</code> and <code>stim_y</code> are of size 128*160 and represent every point in the input image for image position data.\nIf the data you are testing is one dimensional, you can initialise the <code>stim_y</code> to a list of zeros of the same size as <code>stim_x</code>.\nThe <code>stimulus_description</code> variable represents which features we stimulated in each stimulus.\nSo the size of the <code>stimulus_description</code> variable is always the amount of stimuli that were presented x the size of <code>stim_x</code></p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">stim_x</span><span class=\"p\">,</span> <span class=\"n\">stim_y</span> <span class=\"o\">=</span> <span class=\"n\">prf_stimulus_generator</span><span class=\"o\">.</span><span class=\"n\">stim_x</span><span class=\"p\">,</span> <span class=\"n\">prf_stimulus_generator</span><span class=\"o\">.</span><span class=\"n\">stim_y</span>\n<span class=\"n\">stimulus</span> <span class=\"o\">=</span> <span class=\"n\">prf_stimulus_generator</span><span class=\"o\">.</span><span class=\"n\">stimulus_description</span>\n</code></pre></div>\n\n<p>Next we need to initialise the parameter set. This is the set of parameters that will be tested by the fitting manager.\nTo do this it is possible to use the <code>init_parameter_set</code> function from the <code>FittingManager</code>. \nThis function requires a step size for each function parameter (x, y, and sigma: i.e. preferred x position, preferred y position and receptive field size or tuning function extent) as well as the maximum and minimum values for each of those.\nFinally, the function has an optional parameter for if the sigma should be linearised. This is useful when you want to use a logarithmic tuning function. \nIn this case we don't, so we left it False.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">shape</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">160</span><span class=\"p\">)</span>\n<span class=\"n\">candidate_function_parameters</span> <span class=\"o\">=</span> <span class=\"n\">FittingManager</span><span class=\"o\">.</span><span class=\"n\">init_parameter_set</span><span class=\"p\">((</span><span class=\"n\">x_step</span><span class=\"p\">,</span> <span class=\"n\">y_step</span><span class=\"p\">,</span> <span class=\"n\">sigma_step</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">shape</span><span class=\"p\">,</span> <span class=\"n\">max_sigma</span><span class=\"p\">),</span>\n                                                                  <span class=\"p\">(</span><span class=\"n\">min_x</span><span class=\"p\">,</span> <span class=\"n\">min_y</span><span class=\"p\">,</span> <span class=\"n\">min_sigma</span><span class=\"p\">),</span> <span class=\"n\">linearise_s</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>Next, we need to pick a table name to store the results in.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">fitting_results_table</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">table</span><span class=\"si\">}</span><span class=\"s2\">_fitting_results&quot;</span>\n</code></pre></div>\n\n<p>Finally, we can run the actual fitting procedure. By default, this function splits the calculation of the results into separate parts to not overload the memory or CPU.\nThe resulting <code>TableSet</code> is returned by the function. </p>\n\n<p>By default, this function uses a gaussian tuning function (<code>\"np.exp(((stim_x - x) ** 2 + (stim_y - y) ** 2) / (-2 * s ** 2))\"</code>). \nTo use a different tuning function you can provide the <code>prediction_function</code> parameter.\nThis parameter is a string that is evaluated in the function. \nIn this code you have the <code>stim_x</code> and <code>stim_y</code> variable as well as the <code>x</code>, <code>y</code>, and <code>sigma</code> for the function from the function parameter set.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">results_tbl_set</span> <span class=\"o\">=</span> <span class=\"n\">fitting_manager</span><span class=\"o\">.</span><span class=\"n\">fit_response_function_on_table_set</span><span class=\"p\">(</span><span class=\"n\">responses_table_set</span><span class=\"p\">,</span> <span class=\"n\">fitting_results_table</span><span class=\"p\">,</span>\n                                                                     <span class=\"n\">stim_x</span><span class=\"p\">,</span> <span class=\"n\">stim_y</span><span class=\"p\">,</span> <span class=\"n\">candidate_function_parameters</span><span class=\"p\">,</span>\n                                                                     <span class=\"n\">stimulus_description</span><span class=\"o\">=</span><span class=\"n\">stimulus_description</span><span class=\"p\">,</span>\n                                                                     <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                                                                     <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">(</span><span class=\"s1\">&#39;float16&#39;</span><span class=\"p\">))</span>\n</code></pre></div>\n\n<p>Since the <code>results_tbl_set</code> contains the results for every tested parameter combination, we need to still determine which parameter combination gave the best fit for each node in the network.\nFor this the <code>FittingManager</code> has a <code>calculate_best_fits</code> function that takes the <code>candidate_function_parameters</code> and the <code>results_tbl_set</code> and stores the best fits in a new table.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">best_fit_results_tbl</span> <span class=\"o\">=</span> <span class=\"n\">fitting_manager</span><span class=\"o\">.</span><span class=\"n\">calculate_best_fits</span><span class=\"p\">(</span><span class=\"n\">results_tbl_set</span><span class=\"p\">,</span> <span class=\"n\">candidate_function_parameters</span><span class=\"p\">,</span> <span class=\"n\">table</span><span class=\"o\">+</span><span class=\"s1\">&#39;_best&#39;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"plot-the-results\">Plot the results</h3>\n\n<p>You can choose many types of plots depending on the need in your project.\nHere we give an example of a plot that might be more commonly useful as well as an explanation of how to access the relevant data for your plots.</p>\n\n<p>Before we start plotting, it is good to understand how the results from the previous step look. \nThe best fits <code>TableSet</code> in the final step of the fitting procedure contains four rows.\nThe rows contain the goodness of fit, preferred x position, preferred y position, and the sigma (receptive field size) respectively.\nSo, in order to retrieve the data for our plot we have to select the row with the type of data we want, and the column with the nodes in the network.</p>\n\n<p>Getting the part of the network that you want to look at is easy thanks to the <code>get_subtable</code> function in the <code>TableSet</code> class.\nIn order to select just the first layer in a network all you need to do is <code>tableset.get_subtable(0)</code>.\nThe returned value is a <code>Table</code> or <code>TableSet</code> that both support slicing in the same way, so that any subsequent functions can be called unaltered.\nFor documentation about slicing in the <code>Table</code> or <code>TableSet</code> please see the documentation for those classes.</p>\n\n<p>Now you are probably wondering: How does this look in practice?\nBelow is a bit of code that plots, for each layer, the receptive field size (sigma in the case of positional data).</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">from</span> <span class=\"nn\">matplotlib.colors</span> <span class=\"kn\">import</span> <span class=\"n\">LinearSegmentedColormap</span>\n\n<span class=\"k\">for</span> <span class=\"n\">layer_subtable</span> <span class=\"ow\">in</span> <span class=\"n\">best_fit_results_tbl</span><span class=\"o\">.</span><span class=\"n\">subtables</span><span class=\"p\">:</span>\n    <span class=\"n\">goodness_of_fits</span><span class=\"p\">,</span> <span class=\"n\">pref_x</span><span class=\"p\">,</span> <span class=\"n\">pref_y</span><span class=\"p\">,</span> <span class=\"n\">pref_s</span> <span class=\"o\">=</span> <span class=\"n\">best_fit_results_tbl</span><span class=\"o\">.</span><span class=\"n\">get_subtable</span><span class=\"p\">(</span><span class=\"n\">layer_subtable</span><span class=\"p\">)[:]</span>\n    <span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">()</span>\n    <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">add_subplot</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">projection</span><span class=\"o\">=</span><span class=\"s1\">&#39;scatter_density&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">white_viridis</span> <span class=\"o\">=</span> <span class=\"n\">LinearSegmentedColormap</span><span class=\"o\">.</span><span class=\"n\">from_list</span><span class=\"p\">(</span><span class=\"s1\">&#39;white_viridis&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;#ffffff&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"mf\">1e-20</span><span class=\"p\">,</span> <span class=\"s1\">&#39;#440053&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;#404388&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;#2a788e&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"mf\">0.6</span><span class=\"p\">,</span> <span class=\"s1\">&#39;#21a784&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"s1\">&#39;#78d151&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;#fde624&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">],</span> <span class=\"n\">N</span><span class=\"o\">=</span><span class=\"mi\">256</span><span class=\"p\">)</span>\n    <span class=\"n\">density</span> <span class=\"o\">=</span> <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">scatter_density</span><span class=\"p\">(</span><span class=\"n\">pref_s</span><span class=\"p\">,</span> <span class=\"n\">goodness_of_fits</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"n\">white_viridis</span><span class=\"p\">)</span>\n    <span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">colorbar</span><span class=\"p\">(</span><span class=\"n\">density</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;Number of neurons per pixel&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_ylabel</span><span class=\"p\">(</span><span class=\"s1\">&#39;Goodness of Fit&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_xlabel</span><span class=\"p\">(</span><span class=\"s1\">&#39;Receptive field size&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<p>As you can see, we go through all the subtables in the main <code>TableSet</code>. In PredNet these correspond to the layers.\nWe then get the best fits for that layer using the <code>get_subtable</code> function.\nFinally, we plot the goodness of fit against the sigma value using a matplotlib scatter plot.</p>\n\n<h2 id=\"adding-new-neural-networks-to-the-code-analysis-system\">Adding new neural networks to the code analysis system</h2>\n\n<p>In order to extend the code analysis system to new neural networks a new class has to be created for that network in the networks sub package. This class has to extend the network class from that same sub package. </p>\n\n<p>The new class has to implement a run function. The run function should run a batch of inputs, given in the input variable, through the model, record activations, and return those activations in the form of a nested tuple of np arrays along with a names dictionary that gives names to each of the items in the nested tuple.</p>\n\n<p>Variables specific to the network can be added to the initialisation function of the class.</p>\n\n<p>In practice, for most hierarchical networks, this all means setting up a model in the <code>__init__</code> function and running the input through that model in the <code>run</code> function. For pre-trained hierarchical PyTorch and TensorFlow/Keras models this means that it is possible to use a fairly standardised approach to building a new network class since recording activations has standardised functions.</p>\n\n<h3 id=\"pytorch-models\">PyTorch models</h3>\n\n<p>For PyTorch models it is possible to load the model using the functions in the submodules in <code>torchvision.models</code> and then registering hooks for the layers in that model using the following function. \nHooks are functions that are performed at a certain timepoint in a process. \nIn the case of PyTorch, the hooks are called when a layer is called, allowing us to store the intermediate results.\nThis function also fills a labels variable that you can use as a names variable when returning output in the <code>run</code> function. \nRun this function after setting up the model in the <code>__init__</code> function. \nFor an example of this method in use please see the AlexNet class.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">__register_hooks</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Function that registers hooks to save results from the network model in the run function.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hook_wrapper</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"k\">def</span> <span class=\"nf\">hook</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">__</span><span class=\"p\">,</span> <span class=\"n\">output</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__raw_output</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">output</span><span class=\"o\">.</span><span class=\"n\">cpu</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">detach</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">numpy</span><span class=\"p\">()</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">hook</span>\n    <span class=\"k\">for</span> <span class=\"n\">submodel_name</span><span class=\"p\">,</span> <span class=\"n\">submodel</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">named_modules</span><span class=\"p\">():</span>\n        <span class=\"k\">if</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">submodel</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"n\">AlexNetModel</span> <span class=\"ow\">and</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">submodel</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">labels</span><span class=\"p\">[</span><span class=\"n\">submodel_name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">submodel_name</span>\n            <span class=\"n\">submodel</span><span class=\"o\">.</span><span class=\"n\">register_forward_hook</span><span class=\"p\">(</span><span class=\"n\">hook_wrapper</span><span class=\"p\">(</span><span class=\"n\">submodel_name</span><span class=\"p\">))</span>\n</code></pre></div>\n\n<p>Note that this does not work well for recurrent models. \nThere you would need to build your own implementation specific to that network.</p>\n\n<h3 id=\"tensorflow-models\">TensorFlow models</h3>\n\n<p>For TensorFlow you will need a slightly different function but with much of the same idea. \nIn the case of TensorFlow, the way to do this generally is to create a second model with the weights of the previous network. \nThis new model has layers that are enclosed in a new type of layer that is accessible by hooks in a similar way to PyTorch models. \nThe enclosed layer is shown below.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">tensorflow</span> <span class=\"k\">as</span> <span class=\"nn\">tf</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"n\">Optional</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">LayerWithHooks</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Layer</span><span class=\"p\">):</span>\n  <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n      <span class=\"bp\">self</span><span class=\"p\">,</span> \n      <span class=\"n\">layer</span><span class=\"p\">:</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Layer</span><span class=\"p\">,</span>\n      <span class=\"n\">hooks</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer</span> <span class=\"o\">=</span> <span class=\"n\">layer</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hooks</span> <span class=\"o\">=</span> <span class=\"n\">hooks</span> <span class=\"ow\">or</span> <span class=\"p\">[]</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">call</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"nb\">input</span><span class=\"p\">:</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">:</span>\n    <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">hook</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hooks</span><span class=\"p\">:</span>\n      <span class=\"n\">hook_result</span> <span class=\"o\">=</span> <span class=\"n\">hook</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">,</span> <span class=\"n\">output</span><span class=\"p\">)</span>\n      <span class=\"k\">if</span> <span class=\"n\">hook_result</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">hook_result</span>\n    <span class=\"k\">return</span> <span class=\"n\">output</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">register_hook</span><span class=\"p\">(</span>\n      <span class=\"bp\">self</span><span class=\"p\">,</span> \n      <span class=\"n\">hook</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]])</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hooks</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">hook</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>The method that registers those hooks is slightly more difficult than the one from PyTorch. An example of a method registering hooks is shown in the code below. In contrast to the default way of doing this in PyTorch, TensorFlow cannot automatically register hooks to each layer. Rather, this code has to be altered based on the network to add each layer in that network to the second model. The second model is the model that should eventually be called in the <code>run</code> function.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">__register_hooks</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Function that registers hooks to save results from the network model in the run function.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__raw_output</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hook_wrapper</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"k\">def</span> <span class=\"nf\">hook</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">output</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__raw_output</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">identity</span><span class=\"p\">(</span><span class=\"n\">output</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">numpy</span><span class=\"p\">()</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">hook</span>\n\n    <span class=\"c1\"># This second model should have the same layers and structure that the original model in self.model has.</span>\n    <span class=\"c1\"># For each layer you take a copy of the original layer that you add to the new model wrapped in a LayerWithHooks layer.</span>\n    <span class=\"c1\"># The layer with hooks should have the hook_wrapper that we defined above.</span>\n    <span class=\"c1\"># The run function should use the self.model2 model to run the network.</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model2</span> <span class=\"o\">=</span> <span class=\"n\">Sequential</span><span class=\"p\">()</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model2</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">LayerWithHooks</span><span class=\"p\">(</span><span class=\"n\">Dense</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"n\">weights</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get_weights</span><span class=\"p\">()),</span> <span class=\"p\">[</span><span class=\"n\">hook_wrapper</span><span class=\"p\">(</span><span class=\"s1\">&#39;First dense layer&#39;</span><span class=\"p\">)]))</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model2</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Activation</span><span class=\"p\">(</span><span class=\"s1\">&#39;tanh&#39;</span><span class=\"p\">))</span>\n</code></pre></div>\n\n<h2 id=\"implement-your-own-stimulus-generator\">Implement your own stimulus generator</h2>\n\n<p>When running your own experiments, you will likely want to design a stimulus set tailored to that experiment.\nTo do so, you have to implement the <code>StimulusGenerator</code> class.</p>\n\n<p>The <code>StimulusGenerator</code> has one function and three properties you have to implement: <code>generate()</code>, <code>stimulus_description</code>, <code>stim_x</code>, and <code>stim_y</code>.\n<code>generate()</code> has one parameter <code>shape</code>. This parameter is the shape of the eventual complete output image or movie (i.e. the input to the network).\nAny other variables you might want to use in your stimulus have to be in the <code>__init__()</code> method. \n<code>generate()</code> does not return the output but only saves the stimuli in a <code>Table</code>/<code>TableSet</code>.\nHow you implement the generation of the stimuli is entirely up to you. </p>\n\n<p>The variables <code>stimulus_description</code>, <code>stim_x</code>, and <code>stim_y</code> describe the stimuli in terms of the features in those stimuli and are used in the FittingManager. \nThese variables must be output for fitting the response function, and are distinct from the images presented to the network.\n<code>stimulus_description</code> is a matrix with, for each generated stimulus, a vector containing the features that were activated. \nThese vectors are of the same length as <code>stim_x</code> and <code>stim_y</code> and the values in the vector correspond to the location in these variables.\nThe <code>stim_x</code> and <code>stim_y</code> contain all possible combinations of feature x and feature y in the stimulus.</p>\n\n<p>An example of a <code>stimulus_description</code>, <code>stim_x</code>, and <code>stim_y</code> in the case of 3 by 3 image positions where each position was stimulated once and one at a time would be:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">stimulus_description</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"n\">stim_x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"n\">stim_y</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n</code></pre></div>\n\n<p>For two-dimensional stimuli you can choose to implement the class <code>TwoDStimulusGenerator</code>.\nThis class has a pre-build function that automatically fills any other dimensions that a network might have such as, in the case of PredNet, a time dimension.\nIn order to implement it you have to implement the <code>_get_2d()</code> function. This function has two parameters: a two-dimensional shape, and an index.\nYou can use the two-dimensional shape to determine the shape of the output and the index to determine what to output at this point.\nYou still have to implement the <code>generate()</code> function from the <code>StimulusGenerator</code> class. \nIn your implementation of this function you can use the <code>_generate_row()</code> function from the <code>TwoDStimulusGenerator</code> with you own indexing system.\nFor an example of how to do this you can look at the <code>PRFStimulusGenerator</code>.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">generate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Table</span><span class=\"p\">,</span> <span class=\"n\">TableSet</span><span class=\"p\">]:</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Generates all input and saves the input to a table</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        shape: (tuple) The expected shape of the input</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        `Table` or `TableSet` containing the stimuli</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">tbl</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">size_x</span> <span class=\"o\">=</span> <span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"n\">size_y</span> <span class=\"o\">=</span> <span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">tqdm</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">size_x</span> <span class=\"o\">+</span> <span class=\"n\">size_y</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__stride</span><span class=\"p\">),</span> <span class=\"n\">leave</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">disable</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__verbose</span><span class=\"p\">)):</span>\n        <span class=\"n\">tbl</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__storage_manager</span><span class=\"o\">.</span><span class=\"n\">save_result_table_set</span><span class=\"p\">((</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_generate_row</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">)[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">newaxis</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],),</span>\n                                                           <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__table</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__table</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__table</span><span class=\"p\">},</span>\n                                                           <span class=\"n\">append_rows</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">tbl</span>\n</code></pre></div>\n\n<h2 id=\"module-diagram\">Module diagram</h2>\n\n<p>The following figure shows the relations between submodules.\nClosed arrows represent that a module uses another module somewhere in its functions.\nOpen arrows represent inheritance.\nTo lookup the modules, you can click through them in the sidebar.</p>\n\n<p><img src=\"/indp-study/images/module_diagram.png\" alt=\"Module diagram\" /></p>\n"}, "nn_tuning.fitting_manager": {"fullname": "nn_tuning.fitting_manager", "modulename": "nn_tuning.fitting_manager", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "nn_tuning.fitting_manager.FittingManager": {"fullname": "nn_tuning.fitting_manager.FittingManager", "modulename": "nn_tuning.fitting_manager", "qualname": "FittingManager", "type": "class", "doc": "<p>Class responsible for fitting response functions to recorded activations and calculating the best fits.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>storage_manager:</strong>  StorageManager used to store the results from fittings.</li>\n</ul>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>storage_manager:</strong>  StorageManager used to store the results from fittings.</li>\n</ul>\n"}, "nn_tuning.fitting_manager.FittingManager.__init__": {"fullname": "nn_tuning.fitting_manager.FittingManager.__init__", "modulename": "nn_tuning.fitting_manager", "qualname": "FittingManager.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "storage_manager"], "funcdef": "def"}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"fullname": "nn_tuning.fitting_manager.FittingManager.calculate_best_fits", "modulename": "nn_tuning.fitting_manager", "qualname": "FittingManager.calculate_best_fits", "type": "function", "doc": "<p>Use already generated results in a Table, TableSet, or np.ndarray to get the best fits from those sets.\nSaves those best_fits to the table.</p>\n\n<p>It the results are a TableSet this function will preserve the organisation of the original TableSet.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>results:</strong>  <code>Table</code>, <code>TableSet</code>, np.ndarray with results.</li>\n<li><strong>candidate_function_parameters:</strong>  The set with candidate function parameters</li>\n<li><strong>table:</strong>  Table to save the best fits to.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Array with the resulting best_fits. If a table name has been provided, a TableSet with the best fits.</p>\n</blockquote>\n", "parameters": ["self", "results", "candidate_function_parameters", "table"], "funcdef": "def"}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"fullname": "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set", "modulename": "nn_tuning.fitting_manager", "qualname": "FittingManager.fit_response_function_on_table_set", "type": "function", "doc": "<p>Creates a new TableSet based on the input TableSet.\nUses the fit response function to calculate the goodness of fit for all recorded nodes in the responses TableSet.\nThis can be done in a, less computationally intensive, way by setting split_calculation to True.\nThen the program will go through the activations one subtable (not subtableset) of the responses TableSet at the time.</p>\n\n<p>Besides that the function has the necessary parameters for the <code>fit_response_function</code>.\nThe <code>fit_response_function</code> is a function that uses a prediction function to generate predictions for the activations of neurons for all the\ncandidate function parameters described in the <code>candidate_function_parameters</code> variable.</p>\n\n<p>By default, the prediction_function is a gaussian function. Another example of a prediction functions could be 'stim_x**x'.\nAt the point of executing the prediction function stim_x, stim_y, x, y, and s are the available parameters.</p>\n\n<p>The predictions are compared to the recorded responses to determine a goodness of fit.</p>\n\n<h2 id=\"see-also\">See Also</h2>\n\n<p>fit_response_function : The function this function uses. This function's documentation also contains some examples of input.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>responses:</strong>  Recorded activations in a TableSet.</li>\n<li><strong>table_set:</strong>  The name of the TableSet to save the results to.</li>\n<li><strong>stim_x:</strong>  The stim_x variable contains an array with, for every row in the responses, what x variables were activated at that point.</li>\n<li><strong>stim_y:</strong>  The stim_y variable contains an array with, for every row in the responses, what y variables were activated at that point.</li>\n<li><strong>candidate_function_parameters:</strong>  A numpy array with, at each row, three variables for x, y, and sigma that will be evaluated by the function.</li>\n<li><strong>prediction_function:</strong>  The function that will generate the prediction. by default this is a simple gaussian function.</li>\n<li><strong>stimulus_description (optional):</strong>  The stimulus variable is an np.ndarray with, at each row, an array with the list of stimuli that were activated at that point.</li>\n<li><strong>parallel (optional, default=True):</strong>  Boolean indicating whether the algorithm should run parallel. Parallel processing makes the algorithm a lot faster.</li>\n<li><strong>verbose (optional, default=False):</strong>  Boolean indicating whether the function prints progress to the console.</li>\n<li><strong>dtype (optional):</strong>  The data type to store the data in when storing the data in a table</li>\n<li><strong>split_calculation (optional, default=True):</strong>  Splits the task into parts to avoid overloading the memory or the CPU.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A TableSet with the goodness of fits for all nodes in the responses table. The TableSet has the same layout as the original one.</p>\n</blockquote>\n", "parameters": ["self", "responses", "table_set", "stim_x", "stim_y", "candidate_function_parameters", "prediction_function", "stimulus_description", "parallel", "verbose", "dtype", "split_calculation"], "funcdef": "def"}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"fullname": "nn_tuning.fitting_manager.FittingManager.fit_response_function", "modulename": "nn_tuning.fitting_manager", "qualname": "FittingManager.fit_response_function", "type": "function", "doc": "<p>Function that uses a prediction function to generate predictions for the activations of neurons for all the\ncandidate function parameters described in the <code>candidate_function_parameters</code> variable.</p>\n\n<p>By default, the prediction_function is a gaussian function. Another example of a prediction functions could be 'stim_x**x'.\nAt the point of executing the prediction function stim_x, stim_y, x, y, and s are the available parameters.</p>\n\n<p>The predictions are compared to the recorded responses to determine a goodness of fit.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">FittingManager</span><span class=\"o\">.</span><span class=\"n\">fit_response_function</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">]]),</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                                     <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">]),</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">]),</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                                     <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                                     <span class=\"s1\">&#39;np.exp(((stim_x - x) ** 2 + (stim_y - y) ** 2) / (-2 * s ** 2))&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">array([0.35, 0.44, 0.99])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">FittingManager</span><span class=\"o\">.</span><span class=\"n\">fit_response_function</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">]]),</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                                     <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">]),</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]),</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                                     <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"o\">...</span><span class=\"p\">]),</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                                     <span class=\"s1\">&#39;np.exp(((stim_x - x) ** 2) / (-2 * s ** 2))&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">array([0.35, 0.44, 0.24])</span>\n</code></pre></div>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>responses:</strong>  Recorded activations</li>\n<li><strong>stim_x:</strong>  The stim_x variable contains an array with, for every row in the responses, what x variables were activated at that point.</li>\n<li><strong>stim_y:</strong>  The stim_y variable contains an array with, for every row in the responses, what y variables were activated at that point.</li>\n<li><strong>candidate_function_parameters:</strong>  A numpy array with, at each row, three variables for x, y, and sigma that will be evaluated by the function.</li>\n<li><strong>prediction_function:</strong>  The function that will generate the prediction. by default this is a simple gaussian function.</li>\n<li><strong>stimulus_description (optional):</strong>  The stimulus variable is an np.ndarray with, at each row, an array with the list of stimuli that were activated at that point.</li>\n<li><strong>parallel (optional, default=True):</strong>  Boolean indicating whether the algorithm should run parallel. Parallel processing makes the algorithm a lot faster.</li>\n<li><strong>verbose (optional, default=False):</strong>  Boolean indicating whether the function prints progress to the console.</li>\n<li><strong>dtype (optional):</strong>  The data type to store the data in when storing the data in a table</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>np.ndarray containing the goodness of fits.</p>\n</blockquote>\n", "parameters": ["responses", "stim_x", "stim_y", "candidate_function_parameters", "prediction_function", "stimulus_description", "parallel", "verbose", "dtype"], "funcdef": "def"}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"fullname": "nn_tuning.fitting_manager.FittingManager.generate_fake_responses", "modulename": "nn_tuning.fitting_manager", "qualname": "FittingManager.generate_fake_responses", "type": "function", "doc": "<p>Generates fake responses for the fitting test.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">FittingManager</span><span class=\"o\">.</span><span class=\"n\">generate_fake_responses</span><span class=\"p\">([(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)],</span> <span class=\"o\">*</span><span class=\"n\">FittingManager</span><span class=\"o\">.</span><span class=\"n\">get_identity_stim_variables</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]]))</span>\n<span class=\"go\">array([[1.48902756, 1.60653066],</span>\n<span class=\"go\">       [0.44996444, 0.16417]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">FittingManager</span><span class=\"o\">.</span><span class=\"n\">generate_fake_responses</span><span class=\"p\">([(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)],</span> <span class=\"o\">*</span><span class=\"n\">FittingManager</span><span class=\"o\">.</span><span class=\"n\">get_identity_stim_variables</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]]))</span>\n<span class=\"go\">array([[0.74186594, 0.68861566],</span>\n<span class=\"go\">       [0.9744101 , 1.21306132]])</span>\n</code></pre></div>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>variables:</strong>  list of tuples containing the known variables</li>\n<li><strong>stim_x:</strong>  Stim x of the fake responses.</li>\n<li><strong>stim_y:</strong>  Stim y of the fake responses.</li>\n<li><strong>stimulus:</strong>  The stimulus of the fake responses.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>np.ndarray of fake responses.</p>\n</blockquote>\n", "parameters": ["variables", "stim_x", "stim_y", "stimulus"], "funcdef": "def"}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"fullname": "nn_tuning.fitting_manager.FittingManager.test_response_fitting", "modulename": "nn_tuning.fitting_manager", "qualname": "FittingManager.test_response_fitting", "type": "function", "doc": "<p>Tests the response fitting using known function parameters by generating fake responses, fitting parameters,\nand comparing the best fitted parameter with the known parameter.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>variables_to_discover:</strong>  list of tuples containing the known variables</li>\n<li><strong>stimulus:</strong>  The stimulus of the fake responses.</li>\n<li><strong>stim_x:</strong>  Stim x of the fake responses.</li>\n<li><strong>stim_y:</strong>  Stim y of the fake responses.</li>\n<li><strong>candidate_function_parameters:</strong>  The candidate parameters.</li>\n<li><strong>parallel:</strong>  Whether the function should use the parallel algorithm</li>\n<li><strong>verbose:</strong>  Whether the function should print progress to the command line.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>np.ndarray with the predictions</p>\n</blockquote>\n", "parameters": ["self", "variables_to_discover", "stimulus", "stim_x", "stim_y", "candidate_function_parameters", "parallel", "verbose"], "funcdef": "def"}, "nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"fullname": "nn_tuning.fitting_manager.FittingManager.linearise_sigma", "modulename": "nn_tuning.fitting_manager", "qualname": "FittingManager.linearise_sigma", "type": "function", "doc": "<p>Calculates a linear full width half maximum for a sigma variable.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">FittingManager</span><span class=\"o\">.</span><span class=\"n\">linearise_sigma</span><span class=\"p\">(</span><span class=\"mf\">0.01</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">0.07064623359911781</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">FittingManager</span><span class=\"o\">.</span><span class=\"n\">linearise_sigma</span><span class=\"p\">(</span><span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"go\">2.3766436233783077</span>\n</code></pre></div>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>log_sigma:</strong>  The sigma value in log space.</li>\n<li><strong>x:</strong>  The corresponding variable</li>\n</ul>\n\n<p>Returns:</p>\n", "parameters": ["log_sigma", "x"], "funcdef": "def"}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"fullname": "nn_tuning.fitting_manager.FittingManager.init_parameter_set", "modulename": "nn_tuning.fitting_manager", "qualname": "FittingManager.init_parameter_set", "type": "function", "doc": "<p>Initialises the candidate function parameters by using the step and shape of the candidate parameters.\nCan linearise the sigma variable and move parameters into log space.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">FittingManager</span><span class=\"o\">.</span><span class=\"n\">init_parameter_set</span><span class=\"p\">((</span><span class=\"mf\">1.</span><span class=\"p\">,</span><span class=\"mf\">1.</span><span class=\"p\">,</span><span class=\"mf\">0.1</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mf\">3.</span><span class=\"p\">,</span><span class=\"mf\">3.</span><span class=\"p\">,</span><span class=\"mf\">0.3</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mf\">0.1</span><span class=\"p\">),</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"go\">array([[1. , 1. , 0.1],</span>\n<span class=\"go\">       [1. , 1. , 0.2],</span>\n<span class=\"go\">       [1. , 2. , 0.1],</span>\n<span class=\"go\">       [1. , 2. , 0.2],</span>\n<span class=\"go\">       [2. , 1. , 0.1],</span>\n<span class=\"go\">       [2. , 1. , 0.2],</span>\n<span class=\"go\">       [2. , 2. , 0.1],</span>\n<span class=\"go\">       [2. , 2. , 0.2]], dtype=float32)</span>\n</code></pre></div>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>step:</strong>  (float, float, float) The step sizes of the parameters.</li>\n<li><strong>par_max:</strong>  (int, int, int) The maximum of the parameters.</li>\n<li><strong>par_min:</strong>  (int, int, int) The minimum of the parameters.</li>\n<li><strong>linearise_s:</strong>  (bool) If true, the sigmas will get linearised.</li>\n<li><strong>log:</strong>  (bool) If true, the first two parameters are moved into log space.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>np.ndarray with at each row a set of parameter function parameters</p>\n</blockquote>\n", "parameters": ["step", "par_max", "par_min", "linearise_s", "log"], "funcdef": "def"}, "nn_tuning.input_manager": {"fullname": "nn_tuning.input_manager", "modulename": "nn_tuning.input_manager", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "nn_tuning.input_manager.InputManager": {"fullname": "nn_tuning.input_manager.InputManager", "modulename": "nn_tuning.input_manager", "qualname": "InputManager", "type": "class", "doc": "<p>Class that manages the input and the batches.\nTakes an input generator as input. The generator saves the input to a table.\nThat table is then used to determine which batches are valid and to retrieve input.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>table:</strong>  (<code>Table</code> or <code>TableSet</code>)  The table the input generator stores it's data to.</li>\n<li><strong>shape:</strong>  (tuple) A tuple of the shape of the input so it can be transformed to that.</li>\n<li><strong>stimulus_generator:</strong>  (<code>StimulusGenerator</code>) An StimulusGenerator that can generate input.</li>\n</ul>\n"}, "nn_tuning.input_manager.InputManager.__init__": {"fullname": "nn_tuning.input_manager.InputManager.__init__", "modulename": "nn_tuning.input_manager", "qualname": "InputManager.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "table", "shape", "stimulus_generator"], "funcdef": "def"}, "nn_tuning.input_manager.InputManager.valid": {"fullname": "nn_tuning.input_manager.InputManager.valid", "modulename": "nn_tuning.input_manager", "qualname": "InputManager.valid", "type": "function", "doc": "<p>Determines if the batch is valid for the input table</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">valid</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">valid</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n</code></pre></div>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>batch:</strong>  Integer of the batch that needs to be tested for validity</li>\n<li><strong>batch_size:</strong>  The size of the batches.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>boolean depicting the validity of the batch.</p>\n</blockquote>\n", "parameters": ["self", "batch", "batch_size"], "funcdef": "def"}, "nn_tuning.input_manager.InputManager.get": {"fullname": "nn_tuning.input_manager.InputManager.get", "modulename": "nn_tuning.input_manager", "qualname": "InputManager.get", "type": "function", "doc": "<p>Function to get the input for a specific batch.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">Array([</span>\n<span class=\"go\">    [1,1,1,1,1,1,0,0,0,0,0,0,0,...],</span>\n<span class=\"go\">    [0,1,1,1,1,1,1,0,0,0,0,0,0,...]</span>\n<span class=\"go\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"go\">Array([</span>\n<span class=\"go\">    [1,1,1,1,1,1,0,0,0,0,0,0,0,...],</span>\n<span class=\"go\">    [0,1,1,1,1,1,1,0,0,0,0,0,0,...],</span>\n<span class=\"go\">    [0,1,1,1,1,1,1,0,0,0,0,0,0,...],</span>\n<span class=\"go\">    [0,1,1,1,1,1,1,0,0,0,0,0,0,...]</span>\n<span class=\"go\">])</span>\n</code></pre></div>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>batch:</strong>  Integer of the batch.</li>\n<li><strong>batch_size:</strong>  The size of the batch.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>np.ndarray containing the input</p>\n</blockquote>\n", "parameters": ["self", "batch", "batch_size"], "funcdef": "def"}, "nn_tuning.networks": {"fullname": "nn_tuning.networks", "modulename": "nn_tuning.networks", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "nn_tuning.networks.alexnet": {"fullname": "nn_tuning.networks.alexnet", "modulename": "nn_tuning.networks.alexnet", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "nn_tuning.networks.alexnet.AlexNet": {"fullname": "nn_tuning.networks.alexnet.AlexNet", "modulename": "nn_tuning.networks.alexnet", "qualname": "AlexNet", "type": "class", "doc": "<p><code>Network</code> that accesses the AlexNet models, presenting it stimuli and returning the activations in an interpretable way.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>model:</strong>  The actual AlexNet model</li>\n<li><strong>labels:</strong>  The network labels. This attribute can be used as a names input for storing results.</li>\n<li><strong>input_shape:</strong>  The shape of the input that AlexNet requires</li>\n</ul>\n"}, "nn_tuning.networks.alexnet.AlexNet.__init__": {"fullname": "nn_tuning.networks.alexnet.AlexNet.__init__", "modulename": "nn_tuning.networks.alexnet", "qualname": "AlexNet.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "nn_tuning.networks.alexnet.AlexNet.run": {"fullname": "nn_tuning.networks.alexnet.AlexNet.run", "modulename": "nn_tuning.networks.alexnet", "qualname": "AlexNet.run", "type": "function", "doc": "<p>Runs the stimuli (in the <code>input_array</code>) through the network and returns the results.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>input_array:</strong>  Input array containing all the stimuli in this batch</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The results as a tuple and the labels as a dictionary</p>\n</blockquote>\n", "parameters": ["self", "input_array"], "funcdef": "def"}, "nn_tuning.networks.network": {"fullname": "nn_tuning.networks.network", "modulename": "nn_tuning.networks.network", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "nn_tuning.networks.network.Network": {"fullname": "nn_tuning.networks.network.Network", "modulename": "nn_tuning.networks.network", "qualname": "Network", "type": "class", "doc": "<p>Abstract Network class\nSubclasses of this class will be the only actual interaction point between networks and the rest of the program.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>current_batch:</strong>  (int) The current batch</li>\n</ul>\n"}, "nn_tuning.networks.network.Network.__init__": {"fullname": "nn_tuning.networks.network.Network.__init__", "modulename": "nn_tuning.networks.network", "qualname": "Network.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "nn_tuning.networks.network.Network.current_batch": {"fullname": "nn_tuning.networks.network.Network.current_batch", "modulename": "nn_tuning.networks.network", "qualname": "Network.current_batch", "type": "variable", "doc": "<p></p>\n"}, "nn_tuning.networks.network.Network.run": {"fullname": "nn_tuning.networks.network.Network.run", "modulename": "nn_tuning.networks.network", "qualname": "Network.run", "type": "function", "doc": "<p>Runs the stimuli (in the <code>input_array</code>) through the network and returns the results.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Network</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">]]))</span>\n<span class=\"go\">(tuple of results split up in subparts for the subtable structure of the `TableSet`, dict of names for the structure of the `TableSet`.</span>\n</code></pre></div>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>input_array:</strong>  Input array containing all the stimuli in this batch</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The results as a tuple and the labels as a dictionary</p>\n</blockquote>\n", "parameters": ["self", "input_array"], "funcdef": "def"}, "nn_tuning.networks.network.Network.is_tf_one": {"fullname": "nn_tuning.networks.network.Network.is_tf_one", "modulename": "nn_tuning.networks.network", "qualname": "Network.is_tf_one", "type": "function", "doc": "<p>Helper function for checking the TensorFlow function</p>\n", "parameters": [], "funcdef": "def"}, "nn_tuning.networks.network.Network.extract_numpy_array": {"fullname": "nn_tuning.networks.network.Network.extract_numpy_array", "modulename": "nn_tuning.networks.network", "qualname": "Network.extract_numpy_array", "type": "function", "doc": "<p>If the tensorflow version is version 1, the extraction of arrays from tensors follows a different algorithm.\nThis function provides a universal function to perform the operation.</p>\n\n<p>The session is an optional variable that allows you to share the same session across different extractions\nsaving memory.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Network</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">extract_numpy_array</span><span class=\"p\">([</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">(),</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">])</span>\n<span class=\"go\">[Array([]), Array([])]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Network</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">extract_numpy_array</span><span class=\"p\">({</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">:</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;B&#39;</span><span class=\"p\">:</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">()})</span>\n<span class=\"go\">{&#39;A&#39;: Array([]), &#39;B&#39;: Array([])}</span>\n</code></pre></div>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>to_extract:</strong>  The tensor or structure containing tensors that needs to be extracted. This structure can be of any type but may not contain any np.ndarrays.</li>\n<li><strong>session (optional):</strong>  The TensorFlow session.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The resulting np.ndarray</p>\n</blockquote>\n", "parameters": ["self", "to_extract", "session"], "funcdef": "def"}, "nn_tuning.networks.network.tf": {"fullname": "nn_tuning.networks.network.tf", "modulename": "nn_tuning.networks.network", "qualname": "tf", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "nn_tuning.networks.prednet": {"fullname": "nn_tuning.networks.prednet", "modulename": "nn_tuning.networks.prednet", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "nn_tuning.networks.prednet.Prednet": {"fullname": "nn_tuning.networks.prednet.Prednet", "modulename": "nn_tuning.networks.prednet", "qualname": "Prednet", "type": "class", "doc": "<p><code>Network</code> that accesses the PredNet models, presenting it stimuli and returning the activations in an interpretable way.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>feedforward_only:</strong>  Boolean that determines whether the recurrent connections are used</li>\n</ul>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>json_file:</strong>  JSon file containing the pre-trained model</li>\n<li><strong>weight_file:</strong>  File containing the pre-trained weights</li>\n<li><strong>presentation:</strong>  The presentation of the stimuli. \"single_pass\" by default. Making it \"iterative\" will present each intermediate frame separately</li>\n<li><strong>take_mean_of_measures (optional, default=True):</strong>  If True, the measured time points will be averaged and only the average will be stored</li>\n</ul>\n"}, "nn_tuning.networks.prednet.Prednet.__init__": {"fullname": "nn_tuning.networks.prednet.Prednet.__init__", "modulename": "nn_tuning.networks.prednet", "qualname": "Prednet.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "json_file", "weight_file", "presentation", "take_mean_of_measures"], "funcdef": "def"}, "nn_tuning.networks.prednet.Prednet.feedforward_only": {"fullname": "nn_tuning.networks.prednet.Prednet.feedforward_only", "modulename": "nn_tuning.networks.prednet", "qualname": "Prednet.feedforward_only", "type": "variable", "doc": "<p></p>\n"}, "nn_tuning.networks.prednet.Prednet.run": {"fullname": "nn_tuning.networks.prednet.Prednet.run", "modulename": "nn_tuning.networks.prednet", "qualname": "Prednet.run", "type": "function", "doc": "<p>Runs the stimuli (in the <code>input_array</code>) through the network and returns the results.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>input_array:</strong>  Input array containing all the stimuli in this batch</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The results as a tuple and the labels as a dictionary</p>\n</blockquote>\n", "parameters": ["self", "input_array"], "funcdef": "def"}, "nn_tuning.output_manager": {"fullname": "nn_tuning.output_manager", "modulename": "nn_tuning.output_manager", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "nn_tuning.output_manager.OutputManager": {"fullname": "nn_tuning.output_manager.OutputManager", "modulename": "nn_tuning.output_manager", "qualname": "OutputManager", "type": "class", "doc": "<p>The <code>OutputManager</code> is the class that goes through batches of input.\nThe batches are retrieved from the provided <code>InputManager</code>.\nThe results are stored using the provided <code>StorageManager</code>.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>network:</strong>  The <code>Network</code> that will be used.</li>\n<li><strong>storage_manager:</strong>  The <code>StorageManager</code> that will allow for saving the results.</li>\n<li><strong>input_manager:</strong>  The <code>InputManager</code> that will provide the input</li>\n</ul>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>network:</strong>  The <code>Network</code> that will be used.</li>\n<li><strong>storage_manager:</strong>  The <code>StorageManager</code> that will allow for saving the results.</li>\n<li><strong>input_manager:</strong>  The <code>InputManager</code> that will provide the input</li>\n</ul>\n"}, "nn_tuning.output_manager.OutputManager.__init__": {"fullname": "nn_tuning.output_manager.OutputManager.__init__", "modulename": "nn_tuning.output_manager", "qualname": "OutputManager.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "network", "storage_manager", "input_manager"], "funcdef": "def"}, "nn_tuning.output_manager.OutputManager.run": {"fullname": "nn_tuning.output_manager.OutputManager.run", "modulename": "nn_tuning.output_manager", "qualname": "OutputManager.run", "type": "function", "doc": "<p>Function runs a batch through a <code>Network</code></p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s1\">&#39;TableName&#39;</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s1\">&#39;TableName&#39;</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">resume</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>table:</strong>  <code>Table</code> to save data to</li>\n<li><strong>batch_size:</strong>  (int) Size of the batches to input into the network</li>\n<li><strong>override (optional, default=True):</strong>  (bool) determines whether the table gets extended or overridden (default=False)</li>\n<li><strong>resume (optional, default=False):</strong>  (bool) resume at last batch on failure</li>\n<li><strong>verbose (optional, default=False):</strong>  (bool) outputs the current batch and total percentage done</li>\n</ul>\n", "parameters": ["self", "table", "batch_size", "override", "resume", "verbose"], "funcdef": "def"}, "nn_tuning.plot": {"fullname": "nn_tuning.plot", "modulename": "nn_tuning.plot", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "nn_tuning.plot.show": {"fullname": "nn_tuning.plot.show", "modulename": "nn_tuning.plot", "qualname": "show", "type": "function", "doc": "<p>Shows a pyplot plot or saves it depending on the settings</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>plot:</strong>  The pyplot object</li>\n</ul>\n", "parameters": ["plot"], "funcdef": "def"}, "nn_tuning.statistics_helper": {"fullname": "nn_tuning.statistics_helper", "modulename": "nn_tuning.statistics_helper", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "nn_tuning.statistics_helper.llincc": {"fullname": "nn_tuning.statistics_helper.llincc", "modulename": "nn_tuning.statistics_helper", "qualname": "llincc", "type": "function", "doc": "<p>Calculates Lin's concordance correlation coefficient.</p>\n\n<p>Usage:   llincc(x,y)    where x, y are equal-length arrays</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>x:</strong>  A numpy array</li>\n<li><strong>y:</strong>  A second numpy array to compare against</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Lin's CC</p>\n</blockquote>\n", "parameters": ["x", "y"], "funcdef": "def"}, "nn_tuning.stimulus_generator": {"fullname": "nn_tuning.stimulus_generator", "modulename": "nn_tuning.stimulus_generator", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator": {"fullname": "nn_tuning.stimulus_generator.numerosity_stimulus_generator", "modulename": "nn_tuning.stimulus_generator.numerosity_stimulus_generator", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"fullname": "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator", "modulename": "nn_tuning.stimulus_generator.numerosity_stimulus_generator", "qualname": "NumerosityStimulusGenerator", "type": "class", "doc": "<p>Class containing function pertaining to the generation of stimuli encoding for numerosity</p>\n\n<p>This class is a subclass of the <code>TwoDStimulusGenerator</code> and is responsible for implementing the generation and storage\nof two dimensional numerosity stimuli and the plotting of said stimuli.</p>\n\n<p>Multiple stimuli are generated for each numerosity for one or multiple different calculation functions.\nThe calculation functions are controls for correlating variables with numerosity like the total amount of contrast\nin a stimulus.</p>\n\n<p>The calculation function can either be area, for a constant total area of all the dots in the image,\nsize for a constant dot size, or circumference for a constant total circumference.\nImages are generated with a random dot placement nvar times.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>nvars:</strong>  (int) The number of random images that are generated for each numerosity-calculation function pair.</li>\n<li><strong>nrange:</strong>  (int, int) The range (min, max) of numerosities stimuli will be generated for.</li>\n</ul>\n"}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"fullname": "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__", "modulename": "nn_tuning.stimulus_generator.numerosity_stimulus_generator", "qualname": "NumerosityStimulusGenerator.__init__", "type": "function", "doc": "<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>nvars:</strong>  (int) The number of random images that are generated for each numerosity-calculation function pair.</li>\n<li><strong>nrange:</strong>  (int, int) The range (min, max) of numerosities stimuli will be generated for.</li>\n<li><strong>table:</strong>  (str) The name of the table the stimuli will be stored to.</li>\n<li><strong>storage_manager:</strong>  (<code>StorageManager</code>) <code>StorageManager</code> that will handle the processing of the table</li>\n<li><strong>verbose (optional, default=False):</strong>  (bool) If yes, will print the process to the console</li>\n<li><strong>calc_functions (optional):</strong>  List with 'area', 'size', and/or 'circumference.</li>\n</ul>\n", "parameters": ["self", "nvars", "nrange", "table", "storage_manager", "verbose", "calc_functions"], "funcdef": "def"}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stim_x": {"fullname": "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stim_x", "modulename": "nn_tuning.stimulus_generator.numerosity_stimulus_generator", "qualname": "NumerosityStimulusGenerator.stim_x", "type": "variable", "doc": "<p></p>\n"}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stim_y": {"fullname": "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stim_y", "modulename": "nn_tuning.stimulus_generator.numerosity_stimulus_generator", "qualname": "NumerosityStimulusGenerator.stim_y", "type": "variable", "doc": "<p></p>\n"}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stimulus_description": {"fullname": "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stimulus_description", "modulename": "nn_tuning.stimulus_generator.numerosity_stimulus_generator", "qualname": "NumerosityStimulusGenerator.stimulus_description", "type": "variable", "doc": "<p>Generates the stimulus description for use in the <code>FittingManager</code></p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>np.ndarray containing the stimulus variable to be used by the FittingManager.</p>\n</blockquote>\n"}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"fullname": "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate", "modulename": "nn_tuning.stimulus_generator.numerosity_stimulus_generator", "qualname": "NumerosityStimulusGenerator.generate", "type": "function", "doc": "<p>Generates the stimuli based on the expected output shape\nIt, for each numerosity in <code>range(self.nrange[0], self.nrange[1)</code>, for each <code>self.calc_function</code>, generates <code>self.nvar</code> random placed dot imgaes.\nFinally it saves those images in a <code>Table</code> and returns them</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>shape:</strong>  (tuple) expected shape of the final stimuli</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>(<code>Table</code>) The resulting stimuli <code>Table</code></p>\n</blockquote>\n", "parameters": ["self", "shape"], "funcdef": "def"}, "nn_tuning.stimulus_generator.prf_stimulus_generator": {"fullname": "nn_tuning.stimulus_generator.prf_stimulus_generator", "modulename": "nn_tuning.stimulus_generator.prf_stimulus_generator", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"fullname": "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator", "modulename": "nn_tuning.stimulus_generator.prf_stimulus_generator", "qualname": "PRFStimulusGenerator", "type": "class", "doc": "<p>Class that generates pRF stimuli for visual field position in a moving bar.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>stride:</strong>  The stride of the moving bar.</li>\n<li><strong>table:</strong>  The name of the table to save the stimuli to.</li>\n<li><strong>storage_manager:</strong>  The StorageManager to use to save the results.</li>\n<li><strong>block_size (optional, default=5):</strong>  The size of the blocks in the stimulus.</li>\n<li><strong>verbose (optional, default=False):</strong>  Whether the class should print its progress to the console.</li>\n</ul>\n"}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.__init__": {"fullname": "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.__init__", "modulename": "nn_tuning.stimulus_generator.prf_stimulus_generator", "qualname": "PRFStimulusGenerator.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "stride", "shape", "table", "storage_manager", "block_size", "verbose"], "funcdef": "def"}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stim_y": {"fullname": "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stim_y", "modulename": "nn_tuning.stimulus_generator.prf_stimulus_generator", "qualname": "PRFStimulusGenerator.stim_y", "type": "variable", "doc": "<p></p>\n"}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stim_x": {"fullname": "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stim_x", "modulename": "nn_tuning.stimulus_generator.prf_stimulus_generator", "qualname": "PRFStimulusGenerator.stim_x", "type": "variable", "doc": "<p></p>\n"}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.generate": {"fullname": "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.generate", "modulename": "nn_tuning.stimulus_generator.prf_stimulus_generator", "qualname": "PRFStimulusGenerator.generate", "type": "function", "doc": "<p>Generates all input and saves the input to a table</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>shape:</strong>  (tuple) The expected shape of the input</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p><code>Table</code> or <code>TableSet</code> containing the stimuli</p>\n</blockquote>\n", "parameters": ["self", "shape"], "funcdef": "def"}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description": {"fullname": "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description", "modulename": "nn_tuning.stimulus_generator.prf_stimulus_generator", "qualname": "PRFStimulusGenerator.stimulus_description", "type": "variable", "doc": "<p>Generates the stimulus description for the pRF data to be used by the <code>FittingManager</code>.\nThe shape indicates the shape of the 2d images.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>np.ndarray containing the stimulus variable to be used by the FittingManager.</p>\n</blockquote>\n"}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"fullname": "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image", "modulename": "nn_tuning.stimulus_generator.prf_stimulus_generator", "qualname": "PRFStimulusGenerator.plot_image", "type": "function", "doc": "<p>Generates and plots a stimulus with a certain shape at a certain index.\nThe title will either be displayed in the plot (when the plot is shown), or used as a filename (when the plot is saved).\nThis function uses the Plot class to save or store plots. To save the plot as an image set <code>Plot.save_fig</code> to <code>True</code>.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">PRFStimulusGenerator</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">plot_image</span><span class=\"p\">((</span><span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">160</span><span class=\"p\">),</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Title&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">Plots an image with a size 160x128 at index 10 with title &#39;Title&#39;.</span>\n</code></pre></div>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>shape:</strong>  (int, int) Shape of the image</li>\n<li><strong>index:</strong>  (int) Index of the stimulus</li>\n<li><strong>title:</strong>  (str) Title of the plot or the filename of the plot</li>\n</ul>\n", "parameters": ["self", "shape", "index", "title"], "funcdef": "def"}, "nn_tuning.stimulus_generator.stimulus_generator": {"fullname": "nn_tuning.stimulus_generator.stimulus_generator", "modulename": "nn_tuning.stimulus_generator.stimulus_generator", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator": {"fullname": "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator", "modulename": "nn_tuning.stimulus_generator.stimulus_generator", "qualname": "StimulusGenerator", "type": "class", "doc": "<p>Abstract class for the StimulusGenerators.</p>\n"}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.generate": {"fullname": "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.generate", "modulename": "nn_tuning.stimulus_generator.stimulus_generator", "qualname": "StimulusGenerator.generate", "type": "function", "doc": "<p>Generates all input and saves the input to a table.</p>\n\n<h2 id=\"usage\">Usage</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">StimulusGenerator</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">((</span><span class=\"mi\">128</span><span class=\"p\">,</span><span class=\"mi\">160</span><span class=\"p\">))</span>\n</code></pre></div>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>shape:</strong>  The expected shape of the input</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Table or TableSet containing the stimuli</p>\n</blockquote>\n", "parameters": ["self", "shape"], "funcdef": "def"}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stimulus_description": {"fullname": "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stimulus_description", "modulename": "nn_tuning.stimulus_generator.stimulus_generator", "qualname": "StimulusGenerator.stimulus_description", "type": "variable", "doc": "<p>Generates the stimulus description for use in the <code>FittingManager</code></p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>np.ndarray containing the stimulus variable to be used by the FittingManager.</p>\n</blockquote>\n"}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stim_x": {"fullname": "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stim_x", "modulename": "nn_tuning.stimulus_generator.stimulus_generator", "qualname": "StimulusGenerator.stim_x", "type": "variable", "doc": "<p></p>\n"}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stim_y": {"fullname": "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stim_y", "modulename": "nn_tuning.stimulus_generator.stimulus_generator", "qualname": "StimulusGenerator.stim_y", "type": "variable", "doc": "<p></p>\n"}, "nn_tuning.stimulus_generator.two_d_stimulus_generator": {"fullname": "nn_tuning.stimulus_generator.two_d_stimulus_generator", "modulename": "nn_tuning.stimulus_generator.two_d_stimulus_generator", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"fullname": "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator", "modulename": "nn_tuning.stimulus_generator.two_d_stimulus_generator", "qualname": "TwoDStimulusGenerator", "type": "class", "doc": "<p>Abstract class with useful functions for <code>StimulusGenerator</code>s that makes it so you do not need to worry about the\nreshaping of rows in an individual stimulus and can focus on the 2d input image.</p>\n\n<p>To implement this class, call the _generate_row function from the generate function and implement the _get_2d function.\nThe _get_2d function handles the creation of 2d stimuli while the _generate_row function handles creating the right shapes around the stimuli.</p>\n\n<p>For an example of a class that implement this class see <code>PRFStimulusGenerator</code></p>\n"}, "nn_tuning.storage": {"fullname": "nn_tuning.storage", "modulename": "nn_tuning.storage", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "nn_tuning.storage.database": {"fullname": "nn_tuning.storage.database", "modulename": "nn_tuning.storage.database", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "nn_tuning.storage.database.Database": {"fullname": "nn_tuning.storage.database.Database", "modulename": "nn_tuning.storage.database", "qualname": "Database", "type": "class", "doc": "<p>Class for storing database wide properties</p>\n\n<p>When initialising the class the database folder will be created if it does not exist</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>folder (str) :</strong>  The folder the database resides in</li>\n</ul>\n"}, "nn_tuning.storage.database.Database.__init__": {"fullname": "nn_tuning.storage.database.Database.__init__", "modulename": "nn_tuning.storage.database", "qualname": "Database.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "folder"], "funcdef": "def"}, "nn_tuning.storage.database.Database.folder": {"fullname": "nn_tuning.storage.database.Database.folder", "modulename": "nn_tuning.storage.database", "qualname": "Database.folder", "type": "variable", "doc": "<p></p>\n"}, "nn_tuning.storage.error": {"fullname": "nn_tuning.storage.error", "modulename": "nn_tuning.storage.error", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "nn_tuning.storage.error.NoSuchTableError": {"fullname": "nn_tuning.storage.error.NoSuchTableError", "modulename": "nn_tuning.storage.error", "qualname": "NoSuchTableError", "type": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n"}, "nn_tuning.storage.error.ShapeMismatchError": {"fullname": "nn_tuning.storage.error.ShapeMismatchError", "modulename": "nn_tuning.storage.error", "qualname": "ShapeMismatchError", "type": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n"}, "nn_tuning.storage.error.TableNotInitialisedError": {"fullname": "nn_tuning.storage.error.TableNotInitialisedError", "modulename": "nn_tuning.storage.error", "qualname": "TableNotInitialisedError", "type": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n"}, "nn_tuning.storage.helpers": {"fullname": "nn_tuning.storage.helpers", "modulename": "nn_tuning.storage.helpers", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "nn_tuning.storage.storage_manager": {"fullname": "nn_tuning.storage.storage_manager", "modulename": "nn_tuning.storage.storage_manager", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "nn_tuning.storage.storage_manager.StorageManager": {"fullname": "nn_tuning.storage.storage_manager.StorageManager", "modulename": "nn_tuning.storage.storage_manager", "qualname": "StorageManager", "type": "class", "doc": "<p>Class handling often used storage related queries such as saving results from an experiment or from fitting to a <code>TableSet</code></p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>database:</strong>  <code>Database</code> the <code>Table</code>s and <code>TableSet</code>s should reside in</li>\n</ul>\n"}, "nn_tuning.storage.storage_manager.StorageManager.__init__": {"fullname": "nn_tuning.storage.storage_manager.StorageManager.__init__", "modulename": "nn_tuning.storage.storage_manager", "qualname": "StorageManager.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "database"], "funcdef": "def"}, "nn_tuning.storage.storage_manager.StorageManager.database": {"fullname": "nn_tuning.storage.storage_manager.StorageManager.database", "modulename": "nn_tuning.storage.storage_manager", "qualname": "StorageManager.database", "type": "variable", "doc": "<p></p>\n"}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"fullname": "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set", "modulename": "nn_tuning.storage.storage_manager", "qualname": "StorageManager.save_result_table_set", "type": "function", "doc": "<p>Function that saves a <code>TableSet</code> with the results.\nResults do not have to be complete. If the result is incomplete provide the nrows or ncols parameters.\nThe lacking rows or columns will then be filled with zeros. When providing the additional results use the\nrow_start and col_start parameters to indicate where the existing TableSet is to be overridden.</p>\n\n<p>If a result tuple is incomplete and has completely missing parts fill in the missing parts with None values.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">StorageManager</span><span class=\"p\">(</span><span class=\"n\">Database</span><span class=\"p\">(</span><span class=\"s1\">&#39;path&#39;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">save_result_table_set</span><span class=\"p\">((</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">]]),),</span> <span class=\"s1\">&#39;TableSetName&#39;</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">&#39;first&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">})</span>\n<span class=\"go\">TableSet(&#39;TableSetName&#39;) &lt;-- `TableSet` with the two rows of data in a single subtable</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">StorageManager</span><span class=\"p\">(</span><span class=\"n\">Database</span><span class=\"p\">(</span><span class=\"s1\">&#39;path&#39;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">save_result_table_set</span><span class=\"p\">((</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">]]),),</span> <span class=\"s1\">&#39;TableSetName&#39;</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">&#39;first&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">},</span> <span class=\"n\">nrows</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"go\">TableSet(&#39;TableSetName&#39;) &lt;-- `TableSet` with the two rows of data appended with two rows of zeros in a single subtable</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">StorageManager</span><span class=\"p\">(</span><span class=\"n\">Database</span><span class=\"p\">(</span><span class=\"s1\">&#39;path&#39;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">save_result_table_set</span><span class=\"p\">((</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">]]),),</span> <span class=\"s1\">&#39;TableSetName&#39;</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">&#39;first&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">},</span> <span class=\"n\">ncols</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">,))</span>\n<span class=\"go\">TableSet(&#39;TableSetName&#39;) &lt;-- `TableSet` with the two rows and four columns of data appended with two columns of zeros in a single subtable</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">StorageManager</span><span class=\"p\">(</span><span class=\"n\">Database</span><span class=\"p\">(</span><span class=\"s1\">&#39;path&#39;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">save_result_table_set</span><span class=\"p\">((</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">]]),),</span> <span class=\"s1\">&#39;TableSetName&#39;</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">&#39;first&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">},</span> <span class=\"n\">row_start</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">TableSet(&#39;TableSetName&#39;) &lt;-- `TableSet` with four rows. The original `TableSet` was changed in rows 2 and 3 with the data given here.</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">StorageManager</span><span class=\"p\">(</span><span class=\"n\">Database</span><span class=\"p\">(</span><span class=\"s1\">&#39;path&#39;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">save_result_table_set</span><span class=\"p\">((</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">]]),),</span> <span class=\"s1\">&#39;TableSetName&#39;</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">&#39;first&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">},</span> <span class=\"n\">append_rows</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"go\">TableSet(&#39;TableSetName&#39;) &lt;-- `TableSet` with four rows. The original `TableSet` was appended with the two rows given here.</span>\n</code></pre></div>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>results:</strong>  A (nested) tuple of np.ndarrays containing results</li>\n<li><strong>name:</strong>  (str) The name of the <code>TableSet</code> to be created or updated</li>\n<li><strong>table_labels:</strong>  A (nested) dictionary of the names of the <code>Table</code>s/<code>SubTable</code>s in the <code>TableSet</code></li>\n<li><strong>nrows (optional):</strong>  Amount of rows that will (eventually) be in the <code>TableSet</code>. If not provided <code>nrows=results.shape[0]</code></li>\n<li><strong>ncols (optional):</strong>  Amount of columns that will (eventually) be in the table set per subpart of the data. If not provided <code>ncols[i]=results[i].shape[1]</code></li>\n<li><strong>row_start (optional, default=0):</strong>  Int of the row where the results start. This parameter is used if nrows does not match the amount of rows in the results.</li>\n<li><strong>col_start (optional, default=0):</strong>  Int of the column where the results start. This parameter is used if ncols does not match the amount of columns in the results.</li>\n<li><strong>append_rows (optional, default=False):</strong>  If true, when the <code>TableSet</code> is already initialised the results will be appended as rows to the existing <code>TableSet</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p><code>TableSet</code> containing the results</p>\n</blockquote>\n", "parameters": ["self", "results", "name", "table_labels", "nrows", "ncols", "row_start", "col_start", "append_rows"], "funcdef": "def"}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"fullname": "nn_tuning.storage.storage_manager.StorageManager.open_table", "modulename": "nn_tuning.storage.storage_manager", "qualname": "StorageManager.open_table", "type": "function", "doc": "<p>Opens a <code>Table</code> or <code>TableSet</code> in the <code>Database</code> with the given name.\nThe function can automatically distinguish between <code>Table</code>s and <code>TableSet</code>s.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">StorageManager</span><span class=\"p\">(</span><span class=\"n\">Database</span><span class=\"p\">(</span><span class=\"s1\">&#39;path&#39;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">open_table</span><span class=\"p\">(</span><span class=\"s1\">&#39;Name&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">Table(&#39;Name&#39;) or TableSet(&#39;Name&#39;) if a `Table` or `TableSet` exists in this database.</span>\n</code></pre></div>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>name:</strong>  Name of the <code>Table</code> or <code>TableSet</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p><code>Table</code> or <code>TableSet</code></p>\n</blockquote>\n", "parameters": ["self", "name"], "funcdef": "def"}, "nn_tuning.storage.storage_manager.StorageManager.remove_table": {"fullname": "nn_tuning.storage.storage_manager.StorageManager.remove_table", "modulename": "nn_tuning.storage.storage_manager", "qualname": "StorageManager.remove_table", "type": "function", "doc": "<p>Deletes a table from the <code>Database</code></p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">StorageManager</span><span class=\"p\">(</span><span class=\"n\">Database</span><span class=\"p\">(</span><span class=\"s1\">&#39;path&#39;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">remove_table</span><span class=\"p\">(</span><span class=\"s1\">&#39;Name&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">Removes table with the name &#39;Name&#39; from the database at path &#39;path&#39;.</span>\n</code></pre></div>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>name:</strong>  The name of the <code>Table</code></li>\n</ul>\n", "parameters": ["self", "name"], "funcdef": "def"}, "nn_tuning.storage.table": {"fullname": "nn_tuning.storage.table", "modulename": "nn_tuning.storage.table", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "nn_tuning.storage.table.Table": {"fullname": "nn_tuning.storage.table.Table", "modulename": "nn_tuning.storage.table", "qualname": "Table", "type": "class", "doc": "<p>Class containing the table structure.\nThe table stores each row in separate files on the machine to offload ram.\nSince file structure are not well equipped to handle a (very) large amount of files,\ndo keep that in mind when initialising tables and transpose the data if necessary.</p>\n\n<p>Tables store rows with other dimensions removed.</p>\n\n<h2 id=\"slicing\">Slicing</h2>\n\n<p>Tables can be accessed using slicing. Slicing in Tables works similar to slicing in Numpy arrays.</p>\n\n<p>Slicing support both get, set, and delete commands.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">table</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n<span class=\"go\">3 &lt;-- this is the element in the second row, in the third column of the `Table`.</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">table</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"mi\">4</span><span class=\"p\">]</span>\n<span class=\"go\">Array([3, 4]) &lt;-- The second and third column of the second row.</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">table</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">5</span><span class=\"p\">]</span>\n<span class=\"go\">Array([[1,2,3,4],[2,3,4,5],[3,4,5,6],[4,5,6,7]]) &lt;-- The rows from the second row to the fifth row in a `Table` with 4 columns.</span>\n</code></pre></div>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>name:</strong>  The name of the <code>Table</code></li>\n<li><strong>database:</strong>  The <code>Database</code> the Table resides in</li>\n<li><strong>table_set:</strong>  The <code>TableSet</code> that is the parent of this <code>Table</code></li>\n</ul>\n"}, "nn_tuning.storage.table.Table.__init__": {"fullname": "nn_tuning.storage.table.Table.__init__", "modulename": "nn_tuning.storage.table", "qualname": "Table.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "name", "database", "table_set"], "funcdef": "def"}, "nn_tuning.storage.table.Table.name": {"fullname": "nn_tuning.storage.table.Table.name", "modulename": "nn_tuning.storage.table", "qualname": "Table.name", "type": "variable", "doc": "<p></p>\n"}, "nn_tuning.storage.table.Table.database": {"fullname": "nn_tuning.storage.table.Table.database", "modulename": "nn_tuning.storage.table", "qualname": "Table.database", "type": "variable", "doc": "<p></p>\n"}, "nn_tuning.storage.table.Table.verbose": {"fullname": "nn_tuning.storage.table.Table.verbose", "modulename": "nn_tuning.storage.table", "qualname": "Table.verbose", "type": "variable", "doc": "<p></p>\n"}, "nn_tuning.storage.table.Table.folder": {"fullname": "nn_tuning.storage.table.Table.folder", "modulename": "nn_tuning.storage.table", "qualname": "Table.folder", "type": "variable", "doc": "<p></p>\n"}, "nn_tuning.storage.table.Table.shape": {"fullname": "nn_tuning.storage.table.Table.shape", "modulename": "nn_tuning.storage.table", "qualname": "Table.shape", "type": "variable", "doc": "<p>The shape of the table</p>\n"}, "nn_tuning.storage.table.Table.nrows": {"fullname": "nn_tuning.storage.table.Table.nrows", "modulename": "nn_tuning.storage.table", "qualname": "Table.nrows", "type": "variable", "doc": "<p>The number of rows in the table</p>\n"}, "nn_tuning.storage.table.Table.ncols": {"fullname": "nn_tuning.storage.table.Table.ncols", "modulename": "nn_tuning.storage.table", "qualname": "Table.ncols", "type": "variable", "doc": "<p>The number of columns in the table</p>\n"}, "nn_tuning.storage.table.Table.dtype": {"fullname": "nn_tuning.storage.table.Table.dtype", "modulename": "nn_tuning.storage.table", "qualname": "Table.dtype", "type": "variable", "doc": "<p>The datatype of the table</p>\n"}, "nn_tuning.storage.table.Table.initialised": {"fullname": "nn_tuning.storage.table.Table.initialised", "modulename": "nn_tuning.storage.table", "qualname": "Table.initialised", "type": "variable", "doc": "<p>Indicates whether the necessary files are initialised and whether the shapes are correct</p>\n"}, "nn_tuning.storage.table.Table.change_dtype": {"fullname": "nn_tuning.storage.table.Table.change_dtype", "modulename": "nn_tuning.storage.table", "qualname": "Table.change_dtype", "type": "function", "doc": "<p>Changes the dtype of the table</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>dtype:</strong>  The desired <code>np.dtype</code></li>\n</ul>\n", "parameters": ["self", "dtype"], "funcdef": "def"}, "nn_tuning.storage.table.Table.initialise": {"fullname": "nn_tuning.storage.table.Table.initialise", "modulename": "nn_tuning.storage.table", "qualname": "Table.initialise", "type": "function", "doc": "<p>Initialises the table using the np.ndarray provided</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Table</span><span class=\"p\">(</span><span class=\"s1\">&#39;Name&#39;</span><span class=\"p\">,</span> <span class=\"n\">Database</span><span class=\"p\">(</span><span class=\"s1\">&#39;path&#39;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">initialise</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">],[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">]]))</span>\n<span class=\"go\">Creates a table with name &#39;Name&#39; and two rows of data Array([[1,2,3,4], [2,3,4,5]])</span>\n</code></pre></div>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>data:</strong>  The array containing the data for the Table</li>\n<li><strong>dtype (optional):</strong>  The dtype of the data, changes the data's dtype if they don't match</li>\n<li><strong>inputs (optional):</strong>  Denotes the inputs for the data in this Table represented as a list of Table names. Table names have to be in the same TableSet or Database.</li>\n<li><strong>outputs (optional):</strong>  Denotes the outputs for the data in this Table represented as a list of Table names. Table names have to be in the same TableSet or Database.</li>\n</ul>\n", "parameters": ["self", "data", "dtype", "inputs", "outputs"], "funcdef": "def"}, "nn_tuning.storage.table.Table.append_rows": {"fullname": "nn_tuning.storage.table.Table.append_rows", "modulename": "nn_tuning.storage.table", "qualname": "Table.append_rows", "type": "function", "doc": "<p>Add a new row to the existing Table</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Table</span><span class=\"p\">(</span><span class=\"s1\">&#39;Name&#39;</span><span class=\"p\">,</span> <span class=\"n\">Database</span><span class=\"p\">(</span><span class=\"s1\">&#39;path&#39;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">append_rows</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">11</span><span class=\"p\">,</span><span class=\"mi\">12</span><span class=\"p\">,</span><span class=\"mi\">13</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">]]))</span>\n<span class=\"go\">Adds rows Array([[10,11,12,13], [11, 12, 13, 14]]) to the existing table at path &#39;path&#39; with name &#39;Name&#39;.</span>\n</code></pre></div>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>data:</strong>  The new rows as an np.ndarray</li>\n</ul>\n", "parameters": ["self", "data"], "funcdef": "def"}, "nn_tuning.storage.table_set": {"fullname": "nn_tuning.storage.table_set", "modulename": "nn_tuning.storage.table_set", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "nn_tuning.storage.table_set.TableSet": {"fullname": "nn_tuning.storage.table_set.TableSet", "modulename": "nn_tuning.storage.table_set", "qualname": "TableSet", "type": "class", "doc": "<p>A set of <code>Table</code>s and or other <code>TableSet</code>s.\nThe get, set, and delete functions work on the aggregated table data.\nTo get a specific subtable you can use <code>get_subtable(key)</code></p>\n\n<h2 id=\"slicing\">Slicing</h2>\n\n<p>TableSets can be accessed using slicing. Slicing in TableSets works similar to slicing in Numpy arrays.</p>\n\n<p>The <code>TableSet</code> slicing combines all subtables into one structure. When using slicing the underlying subtables are combined.</p>\n\n<p>Slicing support both get, set, and delete commands.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tableset</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n<span class=\"go\">3 &lt;-- this is the element in the second row, in the third column of the `TableSet`.</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tableset</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"mi\">4</span><span class=\"p\">]</span>\n<span class=\"go\">Array([3, 4]) &lt;-- The second and third column of the second row.</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tableset</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">5</span><span class=\"p\">]</span>\n<span class=\"go\">Array([[1,2,3,4],[2,3,4,5],[3,4,5,6],[4,5,6,7]]) &lt;-- The rows from the second row to the fifth row in a `TableSet` with 4 columns.</span>\n</code></pre></div>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>name:</strong>  Name of the <code>TableSet</code>.</li>\n<li><strong>database:</strong>  The <code>database</code> the TableSet is in.</li>\n<li><strong>table_set (optional):</strong>  The TableSet this TableSet is a part of.</li>\n<li><strong>verbose:</strong>  If true progress bars are shown during some operations</li>\n</ul>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>name:</strong>  Name of the TableSet.</li>\n<li><strong>database:</strong>  The database the TableSet is in.</li>\n<li><strong>table_set (optional):</strong>  The TableSet this TableSet is a part of.</li>\n<li><strong>verbose (optional, default=False):</strong>  If true progress bars are shown during some operations</li>\n</ul>\n"}, "nn_tuning.storage.table_set.TableSet.__init__": {"fullname": "nn_tuning.storage.table_set.TableSet.__init__", "modulename": "nn_tuning.storage.table_set", "qualname": "TableSet.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "name", "database", "table_set", "verbose"], "funcdef": "def"}, "nn_tuning.storage.table_set.TableSet.name": {"fullname": "nn_tuning.storage.table_set.TableSet.name", "modulename": "nn_tuning.storage.table_set", "qualname": "TableSet.name", "type": "variable", "doc": "<p></p>\n"}, "nn_tuning.storage.table_set.TableSet.database": {"fullname": "nn_tuning.storage.table_set.TableSet.database", "modulename": "nn_tuning.storage.table_set", "qualname": "TableSet.database", "type": "variable", "doc": "<p></p>\n"}, "nn_tuning.storage.table_set.TableSet.verbose": {"fullname": "nn_tuning.storage.table_set.TableSet.verbose", "modulename": "nn_tuning.storage.table_set", "qualname": "TableSet.verbose", "type": "variable", "doc": "<p></p>\n"}, "nn_tuning.storage.table_set.TableSet.initialise": {"fullname": "nn_tuning.storage.table_set.TableSet.initialise", "modulename": "nn_tuning.storage.table_set", "qualname": "TableSet.initialise", "type": "function", "doc": "<p>Initialise the TableSet with the structure set in the data parameter.\nNames and data need to be of the same shape.</p>\n\n<p>The program will use the key of the names dict as the name of the Table or TableSet.</p>\n\n<p>It is possible to create sub TableSets by making nested dicts in the names variable and nested tuples in the\ndata variable.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">TableSet</span><span class=\"p\">(</span><span class=\"s1\">&#39;Name&#39;</span><span class=\"p\">,</span> <span class=\"n\">Database</span><span class=\"p\">(</span><span class=\"s1\">&#39;path&#39;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">initialise</span><span class=\"p\">((</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">]]),</span> <span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">]]))),</span> <span class=\"p\">{</span><span class=\"s1\">&#39;first_subtable&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;second_subtable&#39;</span><span class=\"p\">:{</span><span class=\"s1\">&#39;first_subtable&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">}})</span>\n<span class=\"go\">Initiliases a TableSet in the database with the given data and names</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">TableSet</span><span class=\"p\">(</span><span class=\"s1\">&#39;Name&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">initialise</span><span class=\"p\">((</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">]]),</span> <span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">]]),</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">]]))),</span> <span class=\"p\">{</span><span class=\"s1\">&#39;first_subtable&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;second_subtable&#39;</span><span class=\"p\">:{</span><span class=\"s1\">&#39;first_subtable&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;second_subtable&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">}},</span> <span class=\"n\">relations</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;first_subtable&#39;</span><span class=\"p\">:([],</span> <span class=\"p\">[</span><span class=\"s1\">&#39;second_subtable&#39;</span><span class=\"p\">]),</span> <span class=\"s1\">&#39;second_subtable&#39;</span><span class=\"p\">:([</span><span class=\"s1\">&#39;first_subtable&#39;</span><span class=\"p\">],[],{</span><span class=\"s1\">&#39;first_subtable&#39;</span><span class=\"p\">:([],[</span><span class=\"s1\">&#39;second_subtable&#39;</span><span class=\"p\">]),</span> <span class=\"s1\">&#39;second_subtable&#39;</span><span class=\"p\">:([</span><span class=\"s1\">&#39;first_subtable&#39;</span><span class=\"p\">],</span> <span class=\"p\">[])})})</span>\n<span class=\"go\">Initialises a TableSet in the database with the given data and names that has defined inputs and outputs</span>\n</code></pre></div>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>data:</strong>  The data of the subtables</li>\n<li><strong>names:</strong>  The names of the subtables and subtablesets</li>\n<li><strong>dtype (optional):</strong>  Data type of the array</li>\n<li>**relations (optional): Relations between components of the data in terms of inputs and outputs. Example: <code>{ 'name': (inputs=list of names, outputs=list of names, child=child dict),  'name2':**  (inputs=list of names, outputs=list of names, child=child dict), etc... }</code></li>\n<li><strong>inputs (optional):</strong>  Denotes the inputs for the data in this TableSet represented as a list of Table names. TableSet names have to be in the same TableSet or Database.</li>\n<li><strong>outputs (optional):</strong>  Denotes the outputs for the data in this TableSet represented as a list of Table names. TableSet names have to be in the same TableSet or Database.</li>\n</ul>\n", "parameters": ["self", "data", "names", "dtype", "relations", "inputs", "outputs"], "funcdef": "def"}, "nn_tuning.storage.table_set.TableSet.append_rows": {"fullname": "nn_tuning.storage.table_set.TableSet.append_rows", "modulename": "nn_tuning.storage.table_set", "qualname": "TableSet.append_rows", "type": "function", "doc": "<p>Add a new rows to the existing TableSet</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">TableSet</span><span class=\"p\">(</span><span class=\"s1\">&#39;Name&#39;</span><span class=\"p\">,</span> <span class=\"n\">Database</span><span class=\"p\">(</span><span class=\"s1\">&#39;path&#39;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">append_rows</span><span class=\"p\">((</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">]]),))</span>\n<span class=\"go\">Adds a single row to a TableSet with one subtable with 4 columns</span>\n</code></pre></div>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>data:</strong>  The new rows as a (nested) tuple of np.ndarrays</li>\n<li><strong>skip_verification (optional, default=False) :</strong>  If True the verification steps are skipped. This allows for faster processing and is used when this function calls itself.</li>\n</ul>\n", "parameters": ["self", "data", "skip_verification"], "funcdef": "def"}, "nn_tuning.storage.table_set.TableSet.shape": {"fullname": "nn_tuning.storage.table_set.TableSet.shape", "modulename": "nn_tuning.storage.table_set", "qualname": "TableSet.shape", "type": "variable", "doc": "<p>Shape of the TableSet</p>\n"}, "nn_tuning.storage.table_set.TableSet.nrows": {"fullname": "nn_tuning.storage.table_set.TableSet.nrows", "modulename": "nn_tuning.storage.table_set", "qualname": "TableSet.nrows", "type": "variable", "doc": "<p>Amount of rows in this subtable</p>\n"}, "nn_tuning.storage.table_set.TableSet.ncols": {"fullname": "nn_tuning.storage.table_set.TableSet.ncols", "modulename": "nn_tuning.storage.table_set", "qualname": "TableSet.ncols", "type": "variable", "doc": "<p>Total amount of columns in this subtable</p>\n"}, "nn_tuning.storage.table_set.TableSet.folder": {"fullname": "nn_tuning.storage.table_set.TableSet.folder", "modulename": "nn_tuning.storage.table_set", "qualname": "TableSet.folder", "type": "variable", "doc": "<p></p>\n"}, "nn_tuning.storage.table_set.TableSet.subtables": {"fullname": "nn_tuning.storage.table_set.TableSet.subtables", "modulename": "nn_tuning.storage.table_set", "qualname": "TableSet.subtables", "type": "variable", "doc": "<p>The names of the subtables in this TableSet</p>\n"}, "nn_tuning.storage.table_set.TableSet.recurrent_subtables": {"fullname": "nn_tuning.storage.table_set.TableSet.recurrent_subtables", "modulename": "nn_tuning.storage.table_set", "qualname": "TableSet.recurrent_subtables", "type": "variable", "doc": "<p>Dictionary of names of subtables and subsubtables etc.</p>\n"}, "nn_tuning.storage.table_set.TableSet.ncols_tuple": {"fullname": "nn_tuning.storage.table_set.TableSet.ncols_tuple", "modulename": "nn_tuning.storage.table_set", "qualname": "TableSet.ncols_tuple", "type": "variable", "doc": "<p>Amount of columns split up by subtable</p>\n"}, "nn_tuning.storage.table_set.TableSet.dtype": {"fullname": "nn_tuning.storage.table_set.TableSet.dtype", "modulename": "nn_tuning.storage.table_set", "qualname": "TableSet.dtype", "type": "variable", "doc": "<p>The datatype of the TableSet</p>\n"}, "nn_tuning.storage.table_set.TableSet.change_dtype": {"fullname": "nn_tuning.storage.table_set.TableSet.change_dtype", "modulename": "nn_tuning.storage.table_set", "qualname": "TableSet.change_dtype", "type": "function", "doc": "<p>Changes the dtype of the TableSet</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>dtype:</strong>  The desired dtype</li>\n</ul>\n", "parameters": ["self", "dtype"], "funcdef": "def"}, "nn_tuning.storage.table_set.TableSet.initialised": {"fullname": "nn_tuning.storage.table_set.TableSet.initialised", "modulename": "nn_tuning.storage.table_set", "qualname": "TableSet.initialised", "type": "variable", "doc": "<p>Indicates whether the TableSet was (correctly) initialised</p>\n"}, "nn_tuning.storage.table_set.TableSet.print_structure": {"fullname": "nn_tuning.storage.table_set.TableSet.print_structure", "modulename": "nn_tuning.storage.table_set", "qualname": "TableSet.print_structure", "type": "function", "doc": "<p>Prints a map of the table structure</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>tabs:</strong>  (Integer) Amount of tabs to print before the text</li>\n</ul>\n", "parameters": ["self", "tabs"], "funcdef": "def"}, "nn_tuning.storage.table_set.TableSet.get_subtable": {"fullname": "nn_tuning.storage.table_set.TableSet.get_subtable", "modulename": "nn_tuning.storage.table_set", "qualname": "TableSet.get_subtable", "type": "function", "doc": "<p>Returns the <code>Table</code> or <code>TableSet</code> with the key</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>key:</strong>  The key of the subtable as a string or integer</li>\n</ul>\n", "parameters": ["self", "key"], "funcdef": "def"}}, "docInfo": {"nn_tuning": {"qualname": 0, "fullname": 1, "doc": 1757}, "nn_tuning.fitting_manager": {"qualname": 0, "fullname": 2, "doc": 0}, "nn_tuning.fitting_manager.FittingManager": {"qualname": 1, "fullname": 3, "doc": 24}, "nn_tuning.fitting_manager.FittingManager.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"qualname": 2, "fullname": 4, "doc": 50}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"qualname": 2, "fullname": 4, "doc": 213}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"qualname": 2, "fullname": 4, "doc": 284}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"qualname": 2, "fullname": 4, "doc": 106}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"qualname": 2, "fullname": 4, "doc": 59}, "nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"qualname": 2, "fullname": 4, "doc": 39}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"qualname": 2, "fullname": 4, "doc": 112}, "nn_tuning.input_manager": {"qualname": 0, "fullname": 2, "doc": 0}, "nn_tuning.input_manager.InputManager": {"qualname": 1, "fullname": 3, "doc": 40}, "nn_tuning.input_manager.InputManager.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "nn_tuning.input_manager.InputManager.valid": {"qualname": 2, "fullname": 4, "doc": 35}, "nn_tuning.input_manager.InputManager.get": {"qualname": 1, "fullname": 3, "doc": 35}, "nn_tuning.networks": {"qualname": 0, "fullname": 2, "doc": 0}, "nn_tuning.networks.alexnet": {"qualname": 0, "fullname": 3, "doc": 0}, "nn_tuning.networks.alexnet.AlexNet": {"qualname": 1, "fullname": 4, "doc": 29}, "nn_tuning.networks.alexnet.AlexNet.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.networks.alexnet.AlexNet.run": {"qualname": 2, "fullname": 5, "doc": 19}, "nn_tuning.networks.network": {"qualname": 0, "fullname": 3, "doc": 0}, "nn_tuning.networks.network.Network": {"qualname": 1, "fullname": 4, "doc": 17}, "nn_tuning.networks.network.Network.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.networks.network.Network.current_batch": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.networks.network.Network.run": {"qualname": 2, "fullname": 5, "doc": 47}, "nn_tuning.networks.network.Network.is_tf_one": {"qualname": 2, "fullname": 5, "doc": 5}, "nn_tuning.networks.network.Network.extract_numpy_array": {"qualname": 2, "fullname": 5, "doc": 81}, "nn_tuning.networks.network.tf": {"qualname": 1, "fullname": 4, "doc": 0}, "nn_tuning.networks.prednet": {"qualname": 0, "fullname": 3, "doc": 0}, "nn_tuning.networks.prednet.Prednet": {"qualname": 1, "fullname": 4, "doc": 54}, "nn_tuning.networks.prednet.Prednet.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.networks.prednet.Prednet.feedforward_only": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.networks.prednet.Prednet.run": {"qualname": 2, "fullname": 5, "doc": 19}, "nn_tuning.output_manager": {"qualname": 0, "fullname": 2, "doc": 0}, "nn_tuning.output_manager.OutputManager": {"qualname": 1, "fullname": 3, "doc": 41}, "nn_tuning.output_manager.OutputManager.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "nn_tuning.output_manager.OutputManager.run": {"qualname": 2, "fullname": 4, "doc": 66}, "nn_tuning.plot": {"qualname": 0, "fullname": 2, "doc": 0}, "nn_tuning.plot.show": {"qualname": 1, "fullname": 3, "doc": 10}, "nn_tuning.statistics_helper": {"qualname": 0, "fullname": 2, "doc": 0}, "nn_tuning.statistics_helper.llincc": {"qualname": 1, "fullname": 3, "doc": 25}, "nn_tuning.stimulus_generator": {"qualname": 0, "fullname": 2, "doc": 0}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator": {"qualname": 0, "fullname": 3, "doc": 0}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"qualname": 1, "fullname": 4, "doc": 85}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"qualname": 2, "fullname": 5, "doc": 48}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stim_x": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stim_y": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stimulus_description": {"qualname": 2, "fullname": 5, "doc": 13}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"qualname": 2, "fullname": 5, "doc": 40}, "nn_tuning.stimulus_generator.prf_stimulus_generator": {"qualname": 0, "fullname": 3, "doc": 0}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"qualname": 1, "fullname": 4, "doc": 38}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stim_y": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stim_x": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.generate": {"qualname": 2, "fullname": 5, "doc": 16}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description": {"qualname": 2, "fullname": 5, "doc": 20}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"qualname": 2, "fullname": 5, "doc": 68}, "nn_tuning.stimulus_generator.stimulus_generator": {"qualname": 0, "fullname": 3, "doc": 0}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator": {"qualname": 1, "fullname": 4, "doc": 3}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.generate": {"qualname": 2, "fullname": 5, "doc": 23}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stimulus_description": {"qualname": 2, "fullname": 5, "doc": 13}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stim_x": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stim_y": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.stimulus_generator.two_d_stimulus_generator": {"qualname": 0, "fullname": 3, "doc": 0}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"qualname": 1, "fullname": 4, "doc": 47}, "nn_tuning.storage": {"qualname": 0, "fullname": 2, "doc": 0}, "nn_tuning.storage.database": {"qualname": 0, "fullname": 3, "doc": 0}, "nn_tuning.storage.database.Database": {"qualname": 1, "fullname": 4, "doc": 17}, "nn_tuning.storage.database.Database.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.storage.database.Database.folder": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.storage.error": {"qualname": 0, "fullname": 3, "doc": 0}, "nn_tuning.storage.error.NoSuchTableError": {"qualname": 1, "fullname": 4, "doc": 6}, "nn_tuning.storage.error.ShapeMismatchError": {"qualname": 1, "fullname": 4, "doc": 6}, "nn_tuning.storage.error.TableNotInitialisedError": {"qualname": 1, "fullname": 4, "doc": 6}, "nn_tuning.storage.helpers": {"qualname": 0, "fullname": 3, "doc": 0}, "nn_tuning.storage.storage_manager": {"qualname": 0, "fullname": 3, "doc": 0}, "nn_tuning.storage.storage_manager.StorageManager": {"qualname": 1, "fullname": 4, "doc": 20}, "nn_tuning.storage.storage_manager.StorageManager.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.storage.storage_manager.StorageManager.database": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"qualname": 2, "fullname": 5, "doc": 347}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"qualname": 2, "fullname": 5, "doc": 47}, "nn_tuning.storage.storage_manager.StorageManager.remove_table": {"qualname": 2, "fullname": 5, "doc": 31}, "nn_tuning.storage.table": {"qualname": 0, "fullname": 3, "doc": 0}, "nn_tuning.storage.table.Table": {"qualname": 1, "fullname": 4, "doc": 110}, "nn_tuning.storage.table.Table.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.storage.table.Table.name": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.storage.table.Table.database": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.storage.table.Table.verbose": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.storage.table.Table.folder": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.storage.table.Table.shape": {"qualname": 2, "fullname": 5, "doc": 2}, "nn_tuning.storage.table.Table.nrows": {"qualname": 2, "fullname": 5, "doc": 3}, "nn_tuning.storage.table.Table.ncols": {"qualname": 2, "fullname": 5, "doc": 3}, "nn_tuning.storage.table.Table.dtype": {"qualname": 2, "fullname": 5, "doc": 2}, "nn_tuning.storage.table.Table.initialised": {"qualname": 2, "fullname": 5, "doc": 8}, "nn_tuning.storage.table.Table.change_dtype": {"qualname": 2, "fullname": 5, "doc": 8}, "nn_tuning.storage.table.Table.initialise": {"qualname": 2, "fullname": 5, "doc": 85}, "nn_tuning.storage.table.Table.append_rows": {"qualname": 2, "fullname": 5, "doc": 51}, "nn_tuning.storage.table_set": {"qualname": 0, "fullname": 3, "doc": 0}, "nn_tuning.storage.table_set.TableSet": {"qualname": 1, "fullname": 4, "doc": 131}, "nn_tuning.storage.table_set.TableSet.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.storage.table_set.TableSet.name": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.storage.table_set.TableSet.database": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.storage.table_set.TableSet.verbose": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.storage.table_set.TableSet.initialise": {"qualname": 2, "fullname": 5, "doc": 217}, "nn_tuning.storage.table_set.TableSet.append_rows": {"qualname": 2, "fullname": 5, "doc": 54}, "nn_tuning.storage.table_set.TableSet.shape": {"qualname": 2, "fullname": 5, "doc": 2}, "nn_tuning.storage.table_set.TableSet.nrows": {"qualname": 2, "fullname": 5, "doc": 3}, "nn_tuning.storage.table_set.TableSet.ncols": {"qualname": 2, "fullname": 5, "doc": 4}, "nn_tuning.storage.table_set.TableSet.folder": {"qualname": 2, "fullname": 5, "doc": 0}, "nn_tuning.storage.table_set.TableSet.subtables": {"qualname": 2, "fullname": 5, "doc": 3}, "nn_tuning.storage.table_set.TableSet.recurrent_subtables": {"qualname": 2, "fullname": 5, "doc": 5}, "nn_tuning.storage.table_set.TableSet.ncols_tuple": {"qualname": 2, "fullname": 5, "doc": 5}, "nn_tuning.storage.table_set.TableSet.dtype": {"qualname": 2, "fullname": 5, "doc": 2}, "nn_tuning.storage.table_set.TableSet.change_dtype": {"qualname": 2, "fullname": 5, "doc": 7}, "nn_tuning.storage.table_set.TableSet.initialised": {"qualname": 2, "fullname": 5, "doc": 5}, "nn_tuning.storage.table_set.TableSet.print_structure": {"qualname": 2, "fullname": 5, "doc": 12}, "nn_tuning.storage.table_set.TableSet.get_subtable": {"qualname": 2, "fullname": 5, "doc": 10}}, "length": 118, "save": true}, "index": {"qualname": {"root": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning.fitting_manager.FittingManager": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.__init__": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}}, "df": 9}}}}}}}}}, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning.networks.prednet.Prednet.feedforward_only": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.storage.database.Database.folder": {"tf": 1}, "nn_tuning.storage.table.Table.folder": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.folder": {"tf": 1}}, "df": 3}}}}}}, "_": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "_": {"docs": {"nn_tuning.fitting_manager.FittingManager.__init__": {"tf": 1}, "nn_tuning.input_manager.InputManager.__init__": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet.__init__": {"tf": 1}, "nn_tuning.networks.network.Network.__init__": {"tf": 1}, "nn_tuning.networks.prednet.Prednet.__init__": {"tf": 1}, "nn_tuning.output_manager.OutputManager.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.storage.database.Database.__init__": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.__init__": {"tf": 1}, "nn_tuning.storage.table.Table.__init__": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.__init__": {"tf": 1}}, "df": 12}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"nn_tuning.networks.network.Network.current_batch": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"nn_tuning.storage.table.Table.change_dtype": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.change_dtype": {"tf": 1}}, "df": 2}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.generate": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.table_set.TableSet.get_subtable": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "f": {"docs": {"nn_tuning.networks.network.tf": {"tf": 1}}, "df": 1}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table.Table.__init__": {"tf": 1}, "nn_tuning.storage.table.Table.name": {"tf": 1}, "nn_tuning.storage.table.Table.database": {"tf": 1}, "nn_tuning.storage.table.Table.verbose": {"tf": 1}, "nn_tuning.storage.table.Table.folder": {"tf": 1}, "nn_tuning.storage.table.Table.shape": {"tf": 1}, "nn_tuning.storage.table.Table.nrows": {"tf": 1}, "nn_tuning.storage.table.Table.ncols": {"tf": 1}, "nn_tuning.storage.table.Table.dtype": {"tf": 1}, "nn_tuning.storage.table.Table.initialised": {"tf": 1}, "nn_tuning.storage.table.Table.change_dtype": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 1}, "nn_tuning.storage.table.Table.append_rows": {"tf": 1}}, "df": 14, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.storage.error.TableNotInitialisedError": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.table_set.TableSet": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.__init__": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.name": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.database": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.verbose": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.shape": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.nrows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.ncols": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.folder": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.subtables": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.recurrent_subtables": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.ncols_tuple": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.dtype": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.change_dtype": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialised": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.print_structure": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.get_subtable": {"tf": 1}}, "df": 19}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {"nn_tuning.statistics_helper.llincc": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning.storage.table.Table.initialised": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialised": {"tf": 1}}, "df": 4}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning.input_manager.InputManager": {"tf": 1}, "nn_tuning.input_manager.InputManager.__init__": {"tf": 1}, "nn_tuning.input_manager.InputManager.valid": {"tf": 1}, "nn_tuning.input_manager.InputManager.get": {"tf": 1}}, "df": 4}}}}}}}}}, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning.networks.network.Network.is_tf_one": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning.input_manager.InputManager.valid": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning.storage.table.Table.verbose": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.verbose": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.networks.alexnet.AlexNet": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet.__init__": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet.run": {"tf": 1}}, "df": 3}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"nn_tuning.storage.table.Table.append_rows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 2}}}}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning.networks.alexnet.AlexNet.run": {"tf": 1}, "nn_tuning.networks.network.Network.run": {"tf": 1}, "nn_tuning.networks.prednet.Prednet.run": {"tf": 1}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1}}, "df": 4}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.remove_table": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.table_set.TableSet.recurrent_subtables": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"nn_tuning.networks.network.Network": {"tf": 1}, "nn_tuning.networks.network.Network.__init__": {"tf": 1}, "nn_tuning.networks.network.Network.current_batch": {"tf": 1}, "nn_tuning.networks.network.Network.run": {"tf": 1}, "nn_tuning.networks.network.Network.is_tf_one": {"tf": 1}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1}}, "df": 6}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stim_x": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stim_y": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.storage.error.NoSuchTableError": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning.storage.table.Table.name": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.name": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"nn_tuning.storage.table.Table.nrows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.nrows": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning.storage.table.Table.ncols": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.ncols": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning.storage.table_set.TableSet.ncols_tuple": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.networks.prednet.Prednet": {"tf": 1}, "nn_tuning.networks.prednet.Prednet.__init__": {"tf": 1}, "nn_tuning.networks.prednet.Prednet.feedforward_only": {"tf": 1}, "nn_tuning.networks.prednet.Prednet.run": {"tf": 1}}, "df": 4}}}}}, "f": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stim_y": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stim_x": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.storage.table_set.TableSet.print_structure": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning.output_manager.OutputManager": {"tf": 1}, "nn_tuning.output_manager.OutputManager.__init__": {"tf": 1}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1}}, "df": 3}}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"nn_tuning.plot.show": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning.storage.table.Table.shape": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.shape": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.storage.error.ShapeMismatchError": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "x": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stim_x": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stim_x": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stim_x": {"tf": 1}}, "df": 3}, "i": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stim_y": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stim_y": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stim_y": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stimulus_description": {"tf": 1}}, "df": 3}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stim_x": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stim_y": {"tf": 1}}, "df": 5}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning.storage.storage_manager.StorageManager": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.__init__": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.database": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.remove_table": {"tf": 1}}, "df": 6}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning.storage.table_set.TableSet.subtables": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning.storage.database.Database": {"tf": 1}, "nn_tuning.storage.database.Database.__init__": {"tf": 1}, "nn_tuning.storage.database.Database.folder": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.database": {"tf": 1}, "nn_tuning.storage.table.Table.database": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.database": {"tf": 1}}, "df": 6}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning.storage.table.Table.dtype": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.dtype": {"tf": 1}}, "df": 2}}}}}}}, "fullname": {"root": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.fitting_manager": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.__init__": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}, "nn_tuning.input_manager": {"tf": 1}, "nn_tuning.input_manager.InputManager": {"tf": 1}, "nn_tuning.input_manager.InputManager.__init__": {"tf": 1}, "nn_tuning.input_manager.InputManager.valid": {"tf": 1}, "nn_tuning.input_manager.InputManager.get": {"tf": 1}, "nn_tuning.networks": {"tf": 1}, "nn_tuning.networks.alexnet": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet.__init__": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet.run": {"tf": 1}, "nn_tuning.networks.network": {"tf": 1}, "nn_tuning.networks.network.Network": {"tf": 1}, "nn_tuning.networks.network.Network.__init__": {"tf": 1}, "nn_tuning.networks.network.Network.current_batch": {"tf": 1}, "nn_tuning.networks.network.Network.run": {"tf": 1}, "nn_tuning.networks.network.Network.is_tf_one": {"tf": 1}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1}, "nn_tuning.networks.network.tf": {"tf": 1}, "nn_tuning.networks.prednet": {"tf": 1}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}, "nn_tuning.networks.prednet.Prednet.__init__": {"tf": 1}, "nn_tuning.networks.prednet.Prednet.feedforward_only": {"tf": 1}, "nn_tuning.networks.prednet.Prednet.run": {"tf": 1}, "nn_tuning.output_manager": {"tf": 1}, "nn_tuning.output_manager.OutputManager": {"tf": 1}, "nn_tuning.output_manager.OutputManager.__init__": {"tf": 1}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1}, "nn_tuning.plot": {"tf": 1}, "nn_tuning.plot.show": {"tf": 1}, "nn_tuning.statistics_helper": {"tf": 1}, "nn_tuning.statistics_helper.llincc": {"tf": 1}, "nn_tuning.stimulus_generator": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stim_x": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stim_y": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stim_y": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stim_x": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stim_x": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stim_y": {"tf": 1}, "nn_tuning.stimulus_generator.two_d_stimulus_generator": {"tf": 1}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}, "nn_tuning.storage": {"tf": 1}, "nn_tuning.storage.database": {"tf": 1}, "nn_tuning.storage.database.Database": {"tf": 1}, "nn_tuning.storage.database.Database.__init__": {"tf": 1}, "nn_tuning.storage.database.Database.folder": {"tf": 1}, "nn_tuning.storage.error": {"tf": 1}, "nn_tuning.storage.error.NoSuchTableError": {"tf": 1}, "nn_tuning.storage.error.ShapeMismatchError": {"tf": 1}, "nn_tuning.storage.error.TableNotInitialisedError": {"tf": 1}, "nn_tuning.storage.helpers": {"tf": 1}, "nn_tuning.storage.storage_manager": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.__init__": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.database": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.remove_table": {"tf": 1}, "nn_tuning.storage.table": {"tf": 1}, "nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table.Table.__init__": {"tf": 1}, "nn_tuning.storage.table.Table.name": {"tf": 1}, "nn_tuning.storage.table.Table.database": {"tf": 1}, "nn_tuning.storage.table.Table.verbose": {"tf": 1}, "nn_tuning.storage.table.Table.folder": {"tf": 1}, "nn_tuning.storage.table.Table.shape": {"tf": 1}, "nn_tuning.storage.table.Table.nrows": {"tf": 1}, "nn_tuning.storage.table.Table.ncols": {"tf": 1}, "nn_tuning.storage.table.Table.dtype": {"tf": 1}, "nn_tuning.storage.table.Table.initialised": {"tf": 1}, "nn_tuning.storage.table.Table.change_dtype": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 1}, "nn_tuning.storage.table.Table.append_rows": {"tf": 1}, "nn_tuning.storage.table_set": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.__init__": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.name": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.database": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.verbose": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.shape": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.nrows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.ncols": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.folder": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.subtables": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.recurrent_subtables": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.ncols_tuple": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.dtype": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.change_dtype": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialised": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.print_structure": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.get_subtable": {"tf": 1}}, "df": 118}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"nn_tuning.networks": {"tf": 1}, "nn_tuning.networks.alexnet": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet.__init__": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet.run": {"tf": 1}, "nn_tuning.networks.network": {"tf": 1.4142135623730951}, "nn_tuning.networks.network.Network": {"tf": 1.7320508075688772}, "nn_tuning.networks.network.Network.__init__": {"tf": 1.7320508075688772}, "nn_tuning.networks.network.Network.current_batch": {"tf": 1.7320508075688772}, "nn_tuning.networks.network.Network.run": {"tf": 1.7320508075688772}, "nn_tuning.networks.network.Network.is_tf_one": {"tf": 1.7320508075688772}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1.7320508075688772}, "nn_tuning.networks.network.tf": {"tf": 1.4142135623730951}, "nn_tuning.networks.prednet": {"tf": 1}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}, "nn_tuning.networks.prednet.Prednet.__init__": {"tf": 1}, "nn_tuning.networks.prednet.Prednet.feedforward_only": {"tf": 1}, "nn_tuning.networks.prednet.Prednet.run": {"tf": 1}}, "df": 18}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stim_x": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stim_y": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stim_x": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stim_y": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.storage.error.NoSuchTableError": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning.storage.table.Table.name": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.name": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"nn_tuning.storage.table.Table.nrows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.nrows": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning.storage.table.Table.ncols": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.ncols": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning.storage.table_set.TableSet.ncols_tuple": {"tf": 1}}, "df": 1}}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning.fitting_manager": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.__init__": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}}, "df": 10}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning.fitting_manager.FittingManager": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.__init__": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}}, "df": 9}}}}}}}}}, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning.networks.prednet.Prednet.feedforward_only": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.storage.database.Database.folder": {"tf": 1}, "nn_tuning.storage.table.Table.folder": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.folder": {"tf": 1}}, "df": 3}}}}}}, "_": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "_": {"docs": {"nn_tuning.fitting_manager.FittingManager.__init__": {"tf": 1}, "nn_tuning.input_manager.InputManager.__init__": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet.__init__": {"tf": 1}, "nn_tuning.networks.network.Network.__init__": {"tf": 1}, "nn_tuning.networks.prednet.Prednet.__init__": {"tf": 1}, "nn_tuning.output_manager.OutputManager.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.storage.database.Database.__init__": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.__init__": {"tf": 1}, "nn_tuning.storage.table.Table.__init__": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.__init__": {"tf": 1}}, "df": 12}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"nn_tuning.networks.network.Network.current_batch": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"nn_tuning.storage.table.Table.change_dtype": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.change_dtype": {"tf": 1}}, "df": 2}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.generate": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.table_set.TableSet.get_subtable": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "f": {"docs": {"nn_tuning.networks.network.tf": {"tf": 1}}, "df": 1}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.stimulus_generator.two_d_stimulus_generator": {"tf": 1}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning.storage.table": {"tf": 1}, "nn_tuning.storage.table.Table": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table.__init__": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table.name": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table.database": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table.verbose": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table.folder": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table.shape": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table.nrows": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table.ncols": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table.dtype": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table.initialised": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table.change_dtype": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table.initialise": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table.append_rows": {"tf": 1.4142135623730951}}, "df": 15, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.storage.error.TableNotInitialisedError": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.table_set": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.__init__": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.name": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.database": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.verbose": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.shape": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.nrows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.ncols": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.folder": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.subtables": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.recurrent_subtables": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.ncols_tuple": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.dtype": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.change_dtype": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialised": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.print_structure": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.get_subtable": {"tf": 1}}, "df": 20}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.table_set.TableSet": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.__init__": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.name": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.database": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.verbose": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.shape": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.nrows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.ncols": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.folder": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.subtables": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.recurrent_subtables": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.ncols_tuple": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.dtype": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.change_dtype": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialised": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.print_structure": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.get_subtable": {"tf": 1}}, "df": 19}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {"nn_tuning.statistics_helper.llincc": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning.storage.table.Table.initialised": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialised": {"tf": 1}}, "df": 4}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning.input_manager": {"tf": 1}, "nn_tuning.input_manager.InputManager": {"tf": 1}, "nn_tuning.input_manager.InputManager.__init__": {"tf": 1}, "nn_tuning.input_manager.InputManager.valid": {"tf": 1}, "nn_tuning.input_manager.InputManager.get": {"tf": 1}}, "df": 5}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning.input_manager.InputManager": {"tf": 1}, "nn_tuning.input_manager.InputManager.__init__": {"tf": 1}, "nn_tuning.input_manager.InputManager.valid": {"tf": 1}, "nn_tuning.input_manager.InputManager.get": {"tf": 1}}, "df": 4}}}}}}}}}, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning.networks.network.Network.is_tf_one": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning.input_manager.InputManager.valid": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning.storage.table.Table.verbose": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.verbose": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.networks.alexnet": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet": {"tf": 1.4142135623730951}, "nn_tuning.networks.alexnet.AlexNet.__init__": {"tf": 1.4142135623730951}, "nn_tuning.networks.alexnet.AlexNet.run": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"nn_tuning.storage.table.Table.append_rows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 2}}}}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning.networks.alexnet.AlexNet.run": {"tf": 1}, "nn_tuning.networks.network.Network.run": {"tf": 1}, "nn_tuning.networks.prednet.Prednet.run": {"tf": 1}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1}}, "df": 4}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.remove_table": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.table_set.TableSet.recurrent_subtables": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.storage.error": {"tf": 1}, "nn_tuning.storage.error.NoSuchTableError": {"tf": 1}, "nn_tuning.storage.error.ShapeMismatchError": {"tf": 1}, "nn_tuning.storage.error.TableNotInitialisedError": {"tf": 1}}, "df": 4}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.networks.prednet": {"tf": 1}, "nn_tuning.networks.prednet.Prednet": {"tf": 1.4142135623730951}, "nn_tuning.networks.prednet.Prednet.__init__": {"tf": 1.4142135623730951}, "nn_tuning.networks.prednet.Prednet.feedforward_only": {"tf": 1.4142135623730951}, "nn_tuning.networks.prednet.Prednet.run": {"tf": 1.4142135623730951}}, "df": 5}}}}}, "f": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.stimulus_generator.prf_stimulus_generator": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stim_y": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stim_x": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stim_y": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stim_x": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.storage.table_set.TableSet.print_structure": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.plot": {"tf": 1}, "nn_tuning.plot.show": {"tf": 1}}, "df": 2, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning.output_manager": {"tf": 1}, "nn_tuning.output_manager.OutputManager": {"tf": 1}, "nn_tuning.output_manager.OutputManager.__init__": {"tf": 1}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1}}, "df": 4}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning.output_manager.OutputManager": {"tf": 1}, "nn_tuning.output_manager.OutputManager.__init__": {"tf": 1}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1}}, "df": 3}}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"nn_tuning.plot.show": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning.storage.table.Table.shape": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.shape": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.storage.error.ShapeMismatchError": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {"nn_tuning.statistics_helper": {"tf": 1}, "nn_tuning.statistics_helper.llincc": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.stimulus_generator": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stim_x": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stim_y": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stim_y": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stim_x": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.generate": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stimulus_description": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stim_x": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stim_y": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.two_d_stimulus_generator": {"tf": 1}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}}, "df": 24}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stimulus_description": {"tf": 1}}, "df": 3}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stim_x": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stim_y": {"tf": 1}}, "df": 5}}}}}}}}}, "_": {"docs": {}, "df": 0, "x": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stim_x": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stim_x": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stim_x": {"tf": 1}}, "df": 3}, "i": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stim_y": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stim_y": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stim_y": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning.storage": {"tf": 1}, "nn_tuning.storage.database": {"tf": 1}, "nn_tuning.storage.database.Database": {"tf": 1}, "nn_tuning.storage.database.Database.__init__": {"tf": 1}, "nn_tuning.storage.database.Database.folder": {"tf": 1}, "nn_tuning.storage.error": {"tf": 1}, "nn_tuning.storage.error.NoSuchTableError": {"tf": 1}, "nn_tuning.storage.error.ShapeMismatchError": {"tf": 1}, "nn_tuning.storage.error.TableNotInitialisedError": {"tf": 1}, "nn_tuning.storage.helpers": {"tf": 1}, "nn_tuning.storage.storage_manager": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.__init__": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.database": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.remove_table": {"tf": 1}, "nn_tuning.storage.table": {"tf": 1}, "nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table.Table.__init__": {"tf": 1}, "nn_tuning.storage.table.Table.name": {"tf": 1}, "nn_tuning.storage.table.Table.database": {"tf": 1}, "nn_tuning.storage.table.Table.verbose": {"tf": 1}, "nn_tuning.storage.table.Table.folder": {"tf": 1}, "nn_tuning.storage.table.Table.shape": {"tf": 1}, "nn_tuning.storage.table.Table.nrows": {"tf": 1}, "nn_tuning.storage.table.Table.ncols": {"tf": 1}, "nn_tuning.storage.table.Table.dtype": {"tf": 1}, "nn_tuning.storage.table.Table.initialised": {"tf": 1}, "nn_tuning.storage.table.Table.change_dtype": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 1}, "nn_tuning.storage.table.Table.append_rows": {"tf": 1}, "nn_tuning.storage.table_set": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.__init__": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.name": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.database": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.verbose": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.shape": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.nrows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.ncols": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.folder": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.subtables": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.recurrent_subtables": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.ncols_tuple": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.dtype": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.change_dtype": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialised": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.print_structure": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.get_subtable": {"tf": 1}}, "df": 52, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning.storage.storage_manager": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.__init__": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.database": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.remove_table": {"tf": 1}}, "df": 7}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning.storage.storage_manager.StorageManager": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.__init__": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.database": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.remove_table": {"tf": 1}}, "df": 6}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning.storage.table_set.TableSet.subtables": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning.storage.database": {"tf": 1}, "nn_tuning.storage.database.Database": {"tf": 1.4142135623730951}, "nn_tuning.storage.database.Database.__init__": {"tf": 1.4142135623730951}, "nn_tuning.storage.database.Database.folder": {"tf": 1.4142135623730951}, "nn_tuning.storage.storage_manager.StorageManager.database": {"tf": 1}, "nn_tuning.storage.table.Table.database": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.database": {"tf": 1}}, "df": 7}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning.storage.table.Table.dtype": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.dtype": {"tf": 1}}, "df": 2}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.storage.helpers": {"tf": 1}}, "df": 1}}}}}}}}, "doc": {"root": {"0": {"1": {"docs": {"nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}}, "df": 1}, "7": {"0": {"6": {"4": {"6": {"2": {"3": {"3": {"5": {"9": {"9": {"1": {"1": {"7": {"8": {"1": {"docs": {"nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"nn_tuning": {"tf": 8.888194417315589}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 3.605551275463989}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 4.47213595499958}, "nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1.7320508075688772}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 3.3166247903554}, "nn_tuning.input_manager.InputManager.get": {"tf": 1.4142135623730951}}, "df": 6, ",": {"1": {"docs": {}, "df": 0, ",": {"1": {"docs": {}, "df": 0, ",": {"1": {"docs": {}, "df": 0, ",": {"1": {"docs": {}, "df": 0, ",": {"1": {"docs": {}, "df": 0, ",": {"1": {"docs": {}, "df": 0, ",": {"0": {"docs": {}, "df": 0, ",": {"0": {"docs": {}, "df": 0, ",": {"0": {"docs": {}, "df": 0, ",": {"0": {"docs": {}, "df": 0, ",": {"0": {"docs": {}, "df": 0, ",": {"0": {"docs": {"nn_tuning.input_manager.InputManager.get": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "1": {"0": {"0": {"docs": {"nn_tuning.input_manager.InputManager.valid": {"tf": 1.4142135623730951}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {"nn_tuning.input_manager.InputManager.valid": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table.append_rows": {"tf": 1}}, "df": 3}, "1": {"docs": {"nn_tuning.storage.table.Table.append_rows": {"tf": 1.7320508075688772}}, "df": 1}, "2": {"8": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.generate": {"tf": 1}}, "df": 3, "*": {"1": {"6": {"0": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {"nn_tuning.storage.table.Table.append_rows": {"tf": 1.7320508075688772}}, "df": 1}, "3": {"docs": {"nn_tuning.storage.table.Table.append_rows": {"tf": 1.7320508075688772}}, "df": 1}, "4": {"docs": {"nn_tuning.storage.table.Table.append_rows": {"tf": 1.4142135623730951}}, "df": 1}, "6": {"0": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.generate": {"tf": 1}}, "df": 3, "x": {"1": {"2": {"8": {"docs": {"nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "4": {"1": {"7": {"docs": {"nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"nn_tuning": {"tf": 4.69041575982343}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 5.196152422706632}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 4}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 4.123105625617661}, "nn_tuning.input_manager.InputManager.valid": {"tf": 1}, "nn_tuning.networks.network.Network.run": {"tf": 1}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.7320508075688772}, "nn_tuning.storage.table.Table": {"tf": 1.7320508075688772}, "nn_tuning.storage.table.Table.initialise": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1.7320508075688772}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 13, "e": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}, ",": {"1": {"docs": {}, "df": 0, ",": {"1": {"docs": {}, "df": 0, ",": {"1": {"docs": {}, "df": 0, ",": {"1": {"docs": {}, "df": 0, ",": {"1": {"docs": {}, "df": 0, ",": {"0": {"docs": {}, "df": 0, ",": {"0": {"docs": {}, "df": 0, ",": {"0": {"docs": {}, "df": 0, ",": {"0": {"docs": {}, "df": 0, ",": {"0": {"docs": {}, "df": 0, ",": {"0": {"docs": {}, "df": 0, ",": {"0": {"docs": {"nn_tuning.input_manager.InputManager.get": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "2": {"0": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}}, "df": 1}, "1": {"3": {"0": {"6": {"1": {"3": {"2": {"docs": {"nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "a": {"7": {"8": {"4": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "4": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}}, "df": 1}, "5": {"6": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"nn_tuning": {"tf": 3.7416573867739413}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 4.795831523312719}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 2.449489742783178}, "nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 3.4641016151377544}, "nn_tuning.input_manager.InputManager.get": {"tf": 1}, "nn_tuning.networks.network.Network.run": {"tf": 1.4142135623730951}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 2.8284271247461903}, "nn_tuning.storage.table.Table": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table.initialise": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 2}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 13, "a": {"7": {"8": {"8": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "d": {"docs": {"nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1.4142135623730951}}, "df": 2}, ",": {"3": {"docs": {}, "df": 0, ",": {"4": {"docs": {}, "df": 0, ",": {"5": {"docs": {"nn_tuning.storage.table.Table.initialise": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "3": {"5": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.4142135623730951}}, "df": 1}, "7": {"6": {"6": {"4": {"3": {"6": {"2": {"3": {"3": {"7": {"8": {"3": {"0": {"7": {"7": {"docs": {"nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"docs": {"nn_tuning": {"tf": 6.324555320336759}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 2}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 2.8284271247461903}, "nn_tuning.output_manager.OutputManager.run": {"tf": 2}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 2}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 7.0710678118654755}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 2.8284271247461903}, "nn_tuning.storage.storage_manager.StorageManager.remove_table": {"tf": 2.8284271247461903}, "nn_tuning.storage.table.Table.initialise": {"tf": 2.449489742783178}, "nn_tuning.storage.table.Table.append_rows": {"tf": 2.8284271247461903}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 6.782329983125268}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 2}}, "df": 12}, "docs": {"nn_tuning": {"tf": 3.3166247903554}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 3.7416573867739413}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1.7320508075688772}, "nn_tuning.networks.network.Network.run": {"tf": 1.4142135623730951}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 3}, "nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 2.23606797749979}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1.4142135623730951}}, "df": 12}, "4": {"0": {"4": {"3": {"8": {"8": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"0": {"0": {"5": {"3": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"9": {"6": {"4": {"4": {"4": {"docs": {"nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.4142135623730951}}, "df": 1}, "8": {"9": {"0": {"2": {"7": {"5": {"6": {"docs": {"nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"nn_tuning": {"tf": 1}, "nn_tuning.input_manager.InputManager.get": {"tf": 1}, "nn_tuning.networks.network.Network.run": {"tf": 1.4142135623730951}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 3.3166247903554}, "nn_tuning.storage.table.Table": {"tf": 1.7320508075688772}, "nn_tuning.storage.table.Table.initialise": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet": {"tf": 1.7320508075688772}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1.7320508075688772}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 9}, "5": {"docs": {"nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}, "nn_tuning.networks.network.Network.run": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 2.6457513110645907}, "nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}}, "df": 7}, "6": {"0": {"6": {"5": {"3": {"0": {"6": {"6": {"docs": {"nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}, "8": {"8": {"6": {"1": {"5": {"6": {"6": {"docs": {"nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"nn_tuning": {"tf": 1.7320508075688772}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 2.23606797749979}}, "df": 2}, "7": {"4": {"1": {"8": {"6": {"5": {"9": {"4": {"docs": {"nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"docs": {}, "df": 0, "d": {"1": {"5": {"1": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {"nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.4142135623730951}}, "df": 1}, "8": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}, "9": {"7": {"4": {"4": {"1": {"0": {"1": {"docs": {"nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}}, "df": 3}}}, "d": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.networks.alexnet.AlexNet": {"tf": 1.7320508075688772}}, "df": 2, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1}, "nn_tuning.output_manager.OutputManager": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 4}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1}}, "df": 4}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {"nn_tuning": {"tf": 3}, "nn_tuning.fitting_manager.FittingManager": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 2.449489742783178}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 2.23606797749979}, "nn_tuning.networks.alexnet.AlexNet": {"tf": 1}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}}, "df": 6, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet": {"tf": 1}, "nn_tuning.networks.network.Network": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.networks.alexnet.AlexNet": {"tf": 1}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}, "nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1}}, "df": 5}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 2}, "nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.nrows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.ncols": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.ncols_tuple": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.print_structure": {"tf": 1}}, "df": 8}}}}}, "x": {"docs": {"nn_tuning": {"tf": 2}}, "df": 1}, "d": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.storage.table.Table.append_rows": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1.4142135623730951}}, "df": 3, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.statistics_helper.llincc": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning.storage.table_set.TableSet": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 3.4641016151377544}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1.4142135623730951}, "nn_tuning.input_manager.InputManager.get": {"tf": 1.4142135623730951}, "nn_tuning.networks.alexnet.AlexNet.run": {"tf": 1}, "nn_tuning.networks.network.Network.run": {"tf": 1.4142135623730951}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 2.23606797749979}, "nn_tuning.networks.prednet.Prednet.run": {"tf": 1}, "nn_tuning.statistics_helper.llincc": {"tf": 1.7320508075688772}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 2.23606797749979}, "nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table.append_rows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 2.449489742783178}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 18, "(": {"docs": {}, "df": 0, "[": {"0": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.4142135623730951}}, "df": 1}, "3": {"docs": {"nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0, "[": {"0": {"docs": {"nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}}, "df": 1}, "1": {"0": {"docs": {}, "df": 0, ",": {"1": {"1": {"docs": {}, "df": 0, ",": {"1": {"2": {"docs": {}, "df": 0, ",": {"1": {"3": {"docs": {"nn_tuning.storage.table.Table.append_rows": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {"nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}}, "df": 2, ",": {"2": {"docs": {}, "df": 0, ",": {"3": {"docs": {}, "df": 0, ",": {"4": {"docs": {"nn_tuning.storage.table.Table.initialise": {"tf": 1}}, "df": 1, "]": {"docs": {}, "df": 0, ",": {"docs": {}, "df": 0, "[": {"2": {"docs": {}, "df": 0, ",": {"3": {"docs": {}, "df": 0, ",": {"4": {"docs": {}, "df": 0, ",": {"5": {"docs": {}, "df": 0, "]": {"docs": {}, "df": 0, ",": {"docs": {}, "df": 0, "[": {"3": {"docs": {}, "df": 0, ",": {"4": {"docs": {}, "df": 0, ",": {"5": {"docs": {}, "df": 0, ",": {"6": {"docs": {}, "df": 0, "]": {"docs": {}, "df": 0, ",": {"docs": {}, "df": 0, "[": {"4": {"docs": {}, "df": 0, ",": {"5": {"docs": {}, "df": 0, ",": {"6": {"docs": {}, "df": 0, ",": {"7": {"docs": {"nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}, "g": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}, "nn_tuning.input_manager.InputManager": {"tf": 1}, "nn_tuning.input_manager.InputManager.valid": {"tf": 1}, "nn_tuning.input_manager.InputManager.get": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet.run": {"tf": 1}, "nn_tuning.networks.network.Network.run": {"tf": 1}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}, "nn_tuning.networks.prednet.Prednet.run": {"tf": 1}, "nn_tuning.output_manager.OutputManager": {"tf": 1}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1}, "nn_tuning.plot.show": {"tf": 1}, "nn_tuning.statistics_helper.llincc": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.generate": {"tf": 1}, "nn_tuning.storage.database.Database": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.remove_table": {"tf": 1}, "nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table.Table.change_dtype": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 1}, "nn_tuning.storage.table.Table.append_rows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.change_dtype": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.print_structure": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.get_subtable": {"tf": 1}}, "df": 42}, "e": {"docs": {}, "df": 0, "a": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 2}}, "df": 2, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table.append_rows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 4}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 1}}, "df": 2}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.networks.network.Network": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}}, "df": 3}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.fitting_manager.FittingManager": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet": {"tf": 1.4142135623730951}, "nn_tuning.networks.network.Network": {"tf": 1}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}, "nn_tuning.output_manager.OutputManager": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1}}, "df": 7}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning.networks.prednet.Prednet": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "n": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 2}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"nn_tuning": {"tf": 6.324555320336759}, "nn_tuning.networks.alexnet.AlexNet": {"tf": 1.4142135623730951}, "nn_tuning.networks.alexnet.AlexNet.run": {"tf": 1}, "nn_tuning.networks.network.Network": {"tf": 1.4142135623730951}, "nn_tuning.networks.network.Network.run": {"tf": 1.4142135623730951}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1.4142135623730951}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}, "nn_tuning.networks.prednet.Prednet.run": {"tf": 1}, "nn_tuning.output_manager.OutputManager": {"tf": 2}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1.4142135623730951}}, "df": 10}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning": {"tf": 3.3166247903554}, "nn_tuning.input_manager.InputManager.valid": {"tf": 1}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}}, "df": 5}}, "w": {"docs": {"nn_tuning": {"tf": 3.1622776601683795}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.storage.table.Table.append_rows": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1.4142135623730951}}, "df": 4, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table.Table.initialised": {"tf": 1}}, "df": 3}}}}}}}}, "n": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 2}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"nn_tuning": {"tf": 2}}, "df": 1}, "d": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.4142135623730951}}, "df": 2}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}, "n": {"docs": {"nn_tuning.storage.error.NoSuchTableError": {"tf": 1}, "nn_tuning.storage.error.ShapeMismatchError": {"tf": 1}, "nn_tuning.storage.error.TableNotInitialisedError": {"tf": 1}}, "df": 3, "e": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"2": {"docs": {"nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}}, "df": 1}, "docs": {"nn_tuning": {"tf": 2.8284271247461903}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet": {"tf": 1}, "nn_tuning.networks.network.Network.run": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.7320508075688772}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 2.449489742783178}, "nn_tuning.storage.storage_manager.StorageManager.remove_table": {"tf": 2.23606797749979}, "nn_tuning.storage.table.Table": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table.initialise": {"tf": 2.6457513110645907}, "nn_tuning.storage.table.Table.append_rows": {"tf": 1.7320508075688772}, "nn_tuning.storage.table_set.TableSet": {"tf": 2}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 4.358898943540674}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.subtables": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.recurrent_subtables": {"tf": 1}}, "df": 18, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {"nn_tuning": {"tf": 2.6457513110645907}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 3.4641016151377544}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1.7320508075688772}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}, "nn_tuning.input_manager.InputManager.get": {"tf": 1}, "nn_tuning.networks.network.Network.run": {"tf": 1}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 2.449489742783178}, "nn_tuning.storage.table.Table.change_dtype": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table.append_rows": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 2.23606797749979}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1.4142135623730951}}, "df": 19}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.storage.table.Table.nrows": {"tf": 1}, "nn_tuning.storage.table.Table.ncols": {"tf": 1}}, "df": 5}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.statistics_helper.llincc": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1}}, "df": 6}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 2.449489742783178}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1}}, "df": 3}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}, "nn_tuning.input_manager.InputManager.get": {"tf": 1}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 1}, "nn_tuning.storage.table.Table.append_rows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 15}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "[": {"0": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1}}, "df": 1}, "1": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 2}}, "df": 1, "s": {"docs": {}, "df": 0, "=": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}}, "df": 1}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 2}}, "df": 1, "s": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "]": {"docs": {}, "df": 0, "=": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "f": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 2.6457513110645907}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning.networks.prednet.Prednet": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"nn_tuning": {"tf": 2.6457513110645907}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.storage.database.Database": {"tf": 1.7320508075688772}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.7320508075688772}}, "df": 2}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "u": {"docs": {"nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning": {"tf": 7.0710678118654755}, "nn_tuning.fitting_manager.FittingManager": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 3.7416573867739413}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 3.1622776601683795}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1.7320508075688772}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1.4142135623730951}, "nn_tuning.input_manager.InputManager.get": {"tf": 1}, "nn_tuning.networks.network.Network.is_tf_one": {"tf": 1.4142135623730951}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1.4142135623730951}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 2.23606797749979}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 2.449489742783178}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 19, "'": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 2.23606797749979}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 2.23606797749979}}, "df": 3, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.table_set.TableSet.initialise": {"tf": 2.8284271247461903}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.networks.prednet.Prednet": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table": {"tf": 1.7320508075688772}, "nn_tuning.storage.table.Table.initialised": {"tf": 1}}, "df": 4, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1.4142135623730951}}, "df": 1}}}}, "l": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.4142135623730951}}, "df": 2}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 2.23606797749979}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1.4142135623730951}}, "df": 2}}}, "t": {"docs": {"nn_tuning": {"tf": 3.872983346207417}, "nn_tuning.fitting_manager.FittingManager": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1.7320508075688772}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1.7320508075688772}, "nn_tuning.storage.storage_manager.StorageManager": {"tf": 1}}, "df": 8, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning": {"tf": 2.23606797749979}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stimulus_description": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stimulus_description": {"tf": 1.4142135623730951}}, "df": 8}}}}}}}}}, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.7320508075688772}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}}, "df": 2}}}, "g": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}}, "df": 1, "u": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"1": {"6": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1.7320508075688772}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1.4142135623730951}, "nn_tuning.input_manager.InputManager.valid": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.output_manager.OutputManager.run": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 3}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 2.23606797749979}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 2}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning.networks.prednet.Prednet": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"6": {"2": {"4": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 2.449489742783178}}, "df": 1}}, "p": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}, "nn_tuning.input_manager.InputManager": {"tf": 1.4142135623730951}, "nn_tuning.networks.alexnet.AlexNet.run": {"tf": 1}, "nn_tuning.networks.network.Network.run": {"tf": 1.4142135623730951}, "nn_tuning.networks.prednet.Prednet.run": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.generate": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 12}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 2.6457513110645907}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 2.8284271247461903}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 2.6457513110645907}}, "df": 2, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"nn_tuning": {"tf": 3}, "nn_tuning.networks.network.Network.is_tf_one": {"tf": 1}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1.4142135623730951}}, "df": 3, "/": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}, "nn_tuning.input_manager.InputManager.valid": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}}, "df": 2}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.table_set.TableSet.print_structure": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {"nn_tuning.storage.table_set.TableSet.print_structure": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {"nn_tuning": {"tf": 4}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 2.449489742783178}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.input_manager.InputManager": {"tf": 2.23606797749979}, "nn_tuning.input_manager.InputManager.valid": {"tf": 1}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1.7320508075688772}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1.7320508075688772}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1.7320508075688772}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.generate": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.generate": {"tf": 1.4142135623730951}, "nn_tuning.storage.storage_manager.StorageManager": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.4142135623730951}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 2.449489742783178}, "nn_tuning.storage.storage_manager.StorageManager.remove_table": {"tf": 1.7320508075688772}, "nn_tuning.storage.table.Table": {"tf": 3.7416573867739413}, "nn_tuning.storage.table.Table.shape": {"tf": 1}, "nn_tuning.storage.table.Table.nrows": {"tf": 1}, "nn_tuning.storage.table.Table.ncols": {"tf": 1}, "nn_tuning.storage.table.Table.dtype": {"tf": 1}, "nn_tuning.storage.table.Table.change_dtype": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 3.1622776601683795}, "nn_tuning.storage.table.Table.append_rows": {"tf": 1.7320508075688772}, "nn_tuning.storage.table_set.TableSet": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1.7320508075688772}, "nn_tuning.storage.table_set.TableSet.print_structure": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.get_subtable": {"tf": 1}}, "df": 28, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 3.3166247903554}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 2.23606797749979}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 2.8284271247461903}, "nn_tuning.input_manager.InputManager": {"tf": 1}, "nn_tuning.networks.network.Network.run": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.generate": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager": {"tf": 1.4142135623730951}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 4.47213595499958}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 2.449489742783178}, "nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet": {"tf": 4.123105625617661}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 3.605551275463989}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1.7320508075688772}, "nn_tuning.storage.table_set.TableSet.shape": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.subtables": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.dtype": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.change_dtype": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialised": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.get_subtable": {"tf": 1}}, "df": 21, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 3.1622776601683795}}, "df": 1}}}}}}, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1.4142135623730951}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"nn_tuning.output_manager.OutputManager.run": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.input_manager.InputManager": {"tf": 1}}, "df": 2, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.networks.prednet.Prednet": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "h": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 2.23606797749979}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1.4142135623730951}, "nn_tuning.input_manager.InputManager.valid": {"tf": 1}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 10}}, "i": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.networks.prednet.Prednet": {"tf": 1.4142135623730951}}, "df": 2}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"nn_tuning.input_manager.InputManager": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning.storage.table.Table": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 2.449489742783178}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning.storage.table.Table": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet": {"tf": 1.4142135623730951}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet.run": {"tf": 1}, "nn_tuning.networks.network.Network.run": {"tf": 1}, "nn_tuning.networks.prednet.Prednet.run": {"tf": 1}, "nn_tuning.output_manager.OutputManager": {"tf": 1}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1}}, "df": 7}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}}, "df": 4, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 2.449489742783178}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning.output_manager.OutputManager.run": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1.7320508075688772}, "nn_tuning.storage.table_set.TableSet.ncols": {"tf": 1}}, "df": 3}}}}, "f": {"docs": {"nn_tuning": {"tf": 3.4641016151377544}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 2}}, "df": 2}, "w": {"docs": {}, "df": 0, "o": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 2.449489742783178}, "nn_tuning.storage.table.Table.initialise": {"tf": 1}}, "df": 5, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}}, "df": 1}}, "q": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 3.605551275463989}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 4.47213595499958}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.4142135623730951}, "nn_tuning.input_manager.InputManager": {"tf": 2.8284271247461903}, "nn_tuning.input_manager.InputManager.valid": {"tf": 1}, "nn_tuning.input_manager.InputManager.get": {"tf": 1.4142135623730951}, "nn_tuning.networks.alexnet.AlexNet": {"tf": 1.4142135623730951}, "nn_tuning.networks.alexnet.AlexNet.run": {"tf": 1}, "nn_tuning.networks.network.Network.run": {"tf": 1}, "nn_tuning.networks.prednet.Prednet.run": {"tf": 1}, "nn_tuning.output_manager.OutputManager": {"tf": 1.7320508075688772}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.generate": {"tf": 1.7320508075688772}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.generate": {"tf": 1.7320508075688772}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 2}}, "df": 16, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.networks.alexnet.AlexNet": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"nn_tuning.networks.alexnet.AlexNet.run": {"tf": 1.4142135623730951}, "nn_tuning.networks.network.Network.run": {"tf": 1.4142135623730951}, "nn_tuning.networks.prednet.Prednet.run": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning.output_manager.OutputManager": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.output_manager.OutputManager": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "=": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning": {"tf": 2.449489742783178}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}, "nn_tuning.storage.database.Database": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}, "nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table.Table.initialised": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 2}, "nn_tuning.storage.table_set.TableSet.initialised": {"tf": 1}}, "df": 9}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}}, "df": 1}}}}}, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "t": {"docs": {"nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 2.449489742783178}, "nn_tuning.networks.network.Network": {"tf": 1}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1.7320508075688772}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1.7320508075688772}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1.7320508075688772}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.4142135623730951}}, "df": 7, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.networks.alexnet.AlexNet": {"tf": 1}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.networks.network.Network": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}}, "df": 1}}, "g": {"docs": {"nn_tuning.input_manager.InputManager.valid": {"tf": 1}, "nn_tuning.input_manager.InputManager.get": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.print_structure": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.get_subtable": {"tf": 1}}, "df": 4}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 2}}, "df": 2}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}, "nn_tuning.storage.table.Table.initialised": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialised": {"tf": 1}}, "df": 6}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {"nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 2.8284271247461903}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 3.3166247903554}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1.7320508075688772}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning": {"tf": 2.23606797749979}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1.7320508075688772}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1.7320508075688772}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}}, "df": 7}}, "g": {"docs": {}, "df": 0, "a": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}}, "df": 2}, "m": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}, "'": {"docs": {"nn_tuning.input_manager.InputManager": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning": {"tf": 2.8284271247461903}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.7320508075688772}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.7320508075688772}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}, "nn_tuning.input_manager.InputManager.get": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet.run": {"tf": 1}, "nn_tuning.networks.network.Network.run": {"tf": 1}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1.4142135623730951}, "nn_tuning.networks.prednet.Prednet": {"tf": 1.4142135623730951}, "nn_tuning.networks.prednet.Prednet.run": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 1}}, "df": 20}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}}, "df": 4}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.networks.prednet.Prednet": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning.statistics_helper.llincc": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning": {"tf": 2.23606797749979}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}, "nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning.storage.error.NoSuchTableError": {"tf": 1}, "nn_tuning.storage.error.ShapeMismatchError": {"tf": 1}, "nn_tuning.storage.error.TableNotInitialisedError": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}, "nn_tuning.storage.table_set.TableSet": {"tf": 1.4142135623730951}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.4142135623730951}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}, "nn_tuning.statistics_helper.llincc": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 2.449489742783178}}, "df": 1}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 2.449489742783178}, "nn_tuning.storage.table.Table": {"tf": 1.7320508075688772}, "nn_tuning.storage.table.Table.ncols": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1.7320508075688772}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.ncols": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.ncols_tuple": {"tf": 1}}, "df": 8}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {"nn_tuning.statistics_helper.llincc": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}}, "df": 2}, "c": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.table.Table.initialised": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning.storage.table_set.TableSet.initialised": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning.statistics_helper.llincc": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning": {"tf": 4}, "nn_tuning.fitting_manager.FittingManager": {"tf": 1}, "nn_tuning.input_manager.InputManager": {"tf": 1}, "nn_tuning.networks.network.Network": {"tf": 1.4142135623730951}, "nn_tuning.output_manager.OutputManager": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 2}, "nn_tuning.storage.database.Database": {"tf": 1.4142135623730951}, "nn_tuning.storage.error.NoSuchTableError": {"tf": 1}, "nn_tuning.storage.error.ShapeMismatchError": {"tf": 1}, "nn_tuning.storage.error.TableNotInitialisedError": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager": {"tf": 1}, "nn_tuning.storage.table.Table": {"tf": 1}}, "df": 16}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 3}}, "df": 1}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1.4142135623730951}}, "df": 5, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}, "nn_tuning.statistics_helper.llincc": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 2}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}}, "df": 7, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {"nn_tuning": {"tf": 2.23606797749979}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}}, "df": 2}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"nn_tuning.networks.network.Network.is_tf_one": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}, "nn_tuning.storage.table.Table.change_dtype": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.change_dtype": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "=": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}, "nn_tuning.storage.database.Database": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.networks.network.Network": {"tf": 1}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1}}, "df": 2, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"nn_tuning.networks.network.Network": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "c": {"docs": {"nn_tuning.statistics_helper.llincc": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning": {"tf": 5.916079783099616}, "nn_tuning.fitting_manager.FittingManager": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.7320508075688772}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}, "nn_tuning.input_manager.InputManager": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet": {"tf": 1}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}, "nn_tuning.output_manager.OutputManager": {"tf": 1.7320508075688772}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stimulus_description": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stimulus_description": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.7320508075688772}, "nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1.7320508075688772}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 24, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning.statistics_helper.llincc": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.generate": {"tf": 1}}, "df": 2}}}, "p": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.networks.network.Network.run": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.ncols_tuple": {"tf": 1}}, "df": 3, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning.storage.table_set.TableSet": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"nn_tuning": {"tf": 3.1622776601683795}}, "df": 1}, "c": {"docs": {}, "df": 0, "k": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"nn_tuning": {"tf": 3.3166247903554}}, "df": 1, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.plot.show": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 3.1622776601683795}, "nn_tuning.plot.show": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 3.3166247903554}}, "df": 4, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}}, "df": 1}}}, "t": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}}, "df": 1}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning": {"tf": 2.8284271247461903}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 2.23606797749979}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.remove_table": {"tf": 1.7320508075688772}, "nn_tuning.storage.table.Table.initialise": {"tf": 1}, "nn_tuning.storage.table.Table.append_rows": {"tf": 1.7320508075688772}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 7, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet": {"tf": 1.4142135623730951}}, "df": 4}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 3.7416573867739413}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.7320508075688772}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 2.23606797749979}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 3}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 2}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}}, "df": 8}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.7320508075688772}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.7320508075688772}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.table.Table": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning.output_manager.OutputManager.run": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.networks.prednet.Prednet": {"tf": 1.4142135623730951}}, "df": 2, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 3.1622776601683795}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 2.449489742783178}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 2.449489742783178}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 2.8284271247461903}, "nn_tuning.networks.alexnet.AlexNet": {"tf": 1}, "nn_tuning.networks.prednet.Prednet": {"tf": 2}}, "df": 3}}, "r": {"docs": {}, "df": 0, "v": {"docs": {"nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 2}}, "df": 1}}, "_": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1, "x": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}, "i": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1}, "nn_tuning.output_manager.OutputManager": {"tf": 2}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 2}, "nn_tuning.storage.table.Table.initialise": {"tf": 1}}, "df": 6}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 5}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.networks.network.Network": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}}, "df": 4}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1.4142135623730951}}, "df": 5}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.storage.database.Database": {"tf": 1}}, "df": 2}}}}}}, "f": {"docs": {"nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}}}}}, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 2.23606797749979}}, "df": 1}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.print_structure": {"tf": 1.4142135623730951}}, "df": 6}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 2.449489742783178}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 3}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 2}, "nn_tuning.networks.network.Network": {"tf": 1}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}}, "df": 5}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 2.449489742783178}, "nn_tuning.networks.alexnet.AlexNet": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 3.3166247903554}, "nn_tuning.fitting_manager.FittingManager": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 2.23606797749979}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet.run": {"tf": 1.4142135623730951}, "nn_tuning.networks.network.Network.run": {"tf": 1.7320508075688772}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1}, "nn_tuning.networks.prednet.Prednet.run": {"tf": 1.4142135623730951}, "nn_tuning.output_manager.OutputManager": {"tf": 1.7320508075688772}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 3.605551275463989}}, "df": 14, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 2}}, "df": 1}}}}}}}}}}}, "m": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1.7320508075688772}}, "df": 2}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 2.8284271247461903}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 2.23606797749979}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 2.23606797749979}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"nn_tuning.networks.network.Network": {"tf": 1}}, "df": 1}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning.storage.database.Database": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager": {"tf": 1}, "nn_tuning.storage.table.Table": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}, "nn_tuning.fitting_manager.FittingManager": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.7320508075688772}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.4142135623730951}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 2}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.storage.table.Table.initialise": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1.4142135623730951}}, "df": 3, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning": {"tf": 3.1622776601683795}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}, "nn_tuning.input_manager.InputManager.valid": {"tf": 1}, "nn_tuning.input_manager.InputManager.get": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet.run": {"tf": 1.4142135623730951}, "nn_tuning.networks.network.Network.run": {"tf": 1.4142135623730951}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}, "nn_tuning.networks.prednet.Prednet.run": {"tf": 1.4142135623730951}, "nn_tuning.statistics_helper.llincc": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.get_subtable": {"tf": 1}}, "df": 26}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.input_manager.InputManager": {"tf": 1}, "nn_tuning.output_manager.OutputManager": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1.7320508075688772}}, "df": 3}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 2.449489742783178}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.remove_table": {"tf": 1}, "nn_tuning.storage.table.Table": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.remove_table": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning": {"tf": 3.872983346207417}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet.run": {"tf": 1}, "nn_tuning.networks.network.Network.run": {"tf": 1.4142135623730951}, "nn_tuning.networks.prednet.Prednet.run": {"tf": 1}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1.7320508075688772}}, "df": 7}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 3.605551275463989}, "nn_tuning.storage.table.Table": {"tf": 2.6457513110645907}, "nn_tuning.storage.table.Table.nrows": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 1}, "nn_tuning.storage.table.Table.append_rows": {"tf": 1.7320508075688772}, "nn_tuning.storage.table_set.TableSet": {"tf": 2.23606797749979}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1.7320508075688772}, "nn_tuning.storage.table_set.TableSet.nrows": {"tf": 1}}, "df": 13, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "(": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {"nn_tuning.storage.table.Table": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 4.898979485566356}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 2.449489742783178}, "nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 2.449489742783178}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1.7320508075688772}, "nn_tuning.input_manager.InputManager.valid": {"tf": 2.449489742783178}, "nn_tuning.input_manager.InputManager.get": {"tf": 2.449489742783178}, "nn_tuning.networks.network.Network.run": {"tf": 1.7320508075688772}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 2.449489742783178}, "nn_tuning.output_manager.OutputManager.run": {"tf": 2.449489742783178}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1.7320508075688772}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.generate": {"tf": 1.7320508075688772}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 3.872983346207417}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 1.7320508075688772}, "nn_tuning.storage.storage_manager.StorageManager.remove_table": {"tf": 1.7320508075688772}, "nn_tuning.storage.table.Table": {"tf": 3}, "nn_tuning.storage.table.Table.initialise": {"tf": 1.7320508075688772}, "nn_tuning.storage.table.Table.append_rows": {"tf": 1.7320508075688772}, "nn_tuning.storage.table_set.TableSet": {"tf": 3}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 2.449489742783178}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1.7320508075688772}}, "df": 21}, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1}}, "df": 2, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}}, "df": 1, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "(": {"0": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"nn_tuning.storage.table_set.TableSet": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 3.7416573867739413}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}, "nn_tuning.input_manager.InputManager": {"tf": 2}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 2.449489742783178}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.generate": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}}, "df": 18, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1, "n": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.4142135623730951}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1.4142135623730951}}, "df": 4}}}}, "o": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.7320508075688772}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.4142135623730951}}, "df": 3, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}, "e": {"docs": {"nn_tuning.output_manager.OutputManager": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}, "e": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}}, "df": 1}}, "e": {"docs": {"nn_tuning.storage.database.Database": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 2.8284271247461903}}, "df": 1}}, "y": {"docs": {"nn_tuning": {"tf": 2.449489742783178}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet": {"tf": 1}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}}, "df": 4}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}}, "df": 2, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.storage.table.Table": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1.4142135623730951}}, "df": 3}, "r": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1.4142135623730951}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}, "nn_tuning.storage.table.Table.initialised": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet.initialised": {"tf": 1}}, "df": 8}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"nn_tuning": {"tf": 2.23606797749979}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table.initialise": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning": {"tf": 3.1622776601683795}, "nn_tuning.input_manager.InputManager": {"tf": 1}}, "df": 2}}, "i": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}}, "df": 6}}, "x": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}}, "df": 3}}}}, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning.storage.table.Table": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {"nn_tuning.storage.table_set.TableSet.print_structure": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}}, "df": 1}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.networks.prednet.Prednet": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning": {"tf": 2}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}}, "df": 2}}}}, "_": {"docs": {}, "df": 0, "x": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}, "i": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"nn_tuning.storage.table.Table": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"2": {"docs": {"nn_tuning": {"tf": 2}}, "df": 1}, "docs": {"nn_tuning": {"tf": 5.196152422706632}, "nn_tuning.networks.alexnet.AlexNet": {"tf": 1.7320508075688772}, "nn_tuning.networks.prednet.Prednet": {"tf": 1.4142135623730951}}, "df": 3}}, "u": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 2}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}, "e": {"docs": {"nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1.4142135623730951}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.plot.show": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.input_manager.InputManager.valid": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {"nn_tuning": {"tf": 3.1622776601683795}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 2.23606797749979}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.4142135623730951}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}}, "df": 4, "=": {"0": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.4142135623730951}}, "df": 1}, "5": {"docs": {"nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1}}, "df": 4}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1.7320508075688772}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 8}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.input_manager.InputManager": {"tf": 1}, "nn_tuning.input_manager.InputManager.valid": {"tf": 1}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1}}, "df": 7}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.table.Table.initialise": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1.4142135623730951}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}, "r": {"docs": {"nn_tuning.storage.table.Table.change_dtype": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.change_dtype": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}}, "df": 3}, "p": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stimulus_description": {"tf": 1}}, "df": 3}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.remove_table": {"tf": 1}, "nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1.4142135623730951}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"nn_tuning": {"tf": 2.6457513110645907}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.7320508075688772}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.7320508075688772}, "nn_tuning.input_manager.InputManager": {"tf": 1}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 2.23606797749979}, "nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 2.449489742783178}, "nn_tuning.storage.table.Table.append_rows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 3.3166247903554}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 13, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning": {"tf": 2.23606797749979}, "nn_tuning.storage.database.Database": {"tf": 1.7320508075688772}, "nn_tuning.storage.storage_manager.StorageManager": {"tf": 1.4142135623730951}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 2.23606797749979}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 1.7320508075688772}, "nn_tuning.storage.storage_manager.StorageManager.remove_table": {"tf": 1.7320508075688772}, "nn_tuning.storage.table.Table": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table.initialise": {"tf": 1.7320508075688772}, "nn_tuning.storage.table.Table.append_rows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 2}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 2.23606797749979}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 12}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"nn_tuning.storage.table.Table.dtype": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.dtype": {"tf": 1}}, "df": 2}}}, "'": {"docs": {"nn_tuning.storage.table.Table.initialise": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 1}}, "df": 2}}, "e": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1}}, "df": 2}}, "t": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1.7320508075688772}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.networks.network.Network.run": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 2}}, "df": 2, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet.run": {"tf": 1}, "nn_tuning.networks.network.Network.run": {"tf": 1}, "nn_tuning.networks.prednet.Prednet.run": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.recurrent_subtables": {"tf": 1}}, "df": 6}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.storage.table.Table.change_dtype": {"tf": 1.7320508075688772}, "nn_tuning.storage.table.Table.initialise": {"tf": 1.7320508075688772}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.change_dtype": {"tf": 1.7320508075688772}}, "df": 7, "=": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {"nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning.storage.table_set.TableSet": {"tf": 1.4142135623730951}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1.4142135623730951}}, "df": 8}}, "n": {"docs": {}, "df": 0, "k": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}, "e": {"docs": {"nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "_": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "'": {"docs": {"nn_tuning.statistics_helper.llincc": {"tf": 1.4142135623730951}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 5}}, "df": 1, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}, "nn_tuning.networks.alexnet.AlexNet": {"tf": 1.4142135623730951}, "nn_tuning.networks.alexnet.AlexNet.run": {"tf": 1}, "nn_tuning.networks.network.Network.run": {"tf": 1}, "nn_tuning.networks.prednet.Prednet.run": {"tf": 1}}, "df": 5}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.output_manager.OutputManager.run": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning.storage.table.Table": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 2.23606797749979}, "nn_tuning.storage.table.Table": {"tf": 1.7320508075688772}, "nn_tuning.storage.table_set.TableSet": {"tf": 1.7320508075688772}}, "df": 4}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}, "g": {"docs": {"nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1.7320508075688772}}, "df": 2, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {"nn_tuning": {"tf": 2}}, "df": 1, "u": {"docs": {}, "df": 0, "p": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}, "t": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.statistics_helper.llincc": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "(": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, ",": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning.statistics_helper.llincc": {"tf": 1}}, "df": 1}}}}}}}}}}, "b": {"docs": {"nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"nn_tuning": {"tf": 2}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1.7320508075688772}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}}, "df": 4, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1.4142135623730951}}, "df": 1, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.print_structure": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.networks.network.Network": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}}, "df": 4}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning": {"tf": 2}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.input_manager.InputManager": {"tf": 1.4142135623730951}, "nn_tuning.input_manager.InputManager.valid": {"tf": 2.23606797749979}, "nn_tuning.input_manager.InputManager.get": {"tf": 2}, "nn_tuning.networks.alexnet.AlexNet.run": {"tf": 1}, "nn_tuning.networks.network.Network": {"tf": 1}, "nn_tuning.networks.network.Network.run": {"tf": 1}, "nn_tuning.networks.prednet.Prednet.run": {"tf": 1}, "nn_tuning.output_manager.OutputManager": {"tf": 1.4142135623730951}, "nn_tuning.output_manager.OutputManager.run": {"tf": 2}}, "df": 10, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.input_manager.InputManager.valid": {"tf": 1}, "nn_tuning.input_manager.InputManager.get": {"tf": 1}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1}}, "df": 4}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1}, "nn_tuning.storage.error.NoSuchTableError": {"tf": 1}, "nn_tuning.storage.error.ShapeMismatchError": {"tf": 1}, "nn_tuning.storage.error.TableNotInitialisedError": {"tf": 1}}, "df": 6}}, "r": {"docs": {"nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet": {"tf": 1.4142135623730951}}, "df": 2}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1.4142135623730951}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1.7320508075688772}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.4142135623730951}, "nn_tuning.input_manager.InputManager.valid": {"tf": 1}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {"nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.generate": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.storage.storage_manager.StorageManager": {"tf": 1}}, "df": 2}}}, "(": {"docs": {}, "df": 0, "(": {"docs": {}, "df": 0, "(": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "x": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 2.6457513110645907}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}, "nn_tuning.input_manager.InputManager.valid": {"tf": 1}, "nn_tuning.input_manager.InputManager.get": {"tf": 1}, "nn_tuning.networks.network.Network.run": {"tf": 1}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.remove_table": {"tf": 1}, "nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 1}, "nn_tuning.storage.table.Table.append_rows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 22}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}, "d": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1.7320508075688772}}, "df": 1, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.database.Database": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.4142135623730951}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 1}, "nn_tuning.storage.table.Table.append_rows": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 5}}, "t": {"docs": {"nn_tuning.storage.error.NoSuchTableError": {"tf": 1}, "nn_tuning.storage.error.ShapeMismatchError": {"tf": 1}, "nn_tuning.storage.error.TableNotInitialisedError": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.error.NoSuchTableError": {"tf": 1}, "nn_tuning.storage.error.ShapeMismatchError": {"tf": 1}, "nn_tuning.storage.error.TableNotInitialisedError": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"nn_tuning": {"tf": 3.3166247903554}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table": {"tf": 1}}, "df": 9}}, "s": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning.statistics_helper.llincc": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"nn_tuning.storage.table.Table": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.recurrent_subtables": {"tf": 1}}, "df": 2}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1, "n": {"docs": {"nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1.7320508075688772}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"nn_tuning.storage.table.Table": {"tf": 1}}, "df": 1}}, "y": {"docs": {"nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.get_subtable": {"tf": 1.7320508075688772}}, "df": 2}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1.4142135623730951}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning": {"tf": 2.449489742783178}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1.4142135623730951}}, "df": 8}}}, "i": {"docs": {"nn_tuning.storage.table.Table": {"tf": 1}}, "df": 1, "f": {"docs": {"nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 3.872983346207417}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 2.6457513110645907}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 2.6457513110645907}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stimulus_description": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1.4142135623730951}}, "df": 13, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning.input_manager.InputManager": {"tf": 1}, "nn_tuning.input_manager.InputManager.valid": {"tf": 2.23606797749979}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.7320508075688772}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager": {"tf": 1.4142135623730951}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.4142135623730951}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet": {"tf": 1.4142135623730951}}, "df": 8, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}, "nn_tuning.input_manager.InputManager.get": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.networks.network.Network.run": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.ncols_tuple": {"tf": 1}}, "df": 4, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1.4142135623730951}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.4142135623730951}}, "df": 2}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.4142135623730951}, "nn_tuning.input_manager.InputManager": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet": {"tf": 1}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}, "nn_tuning.output_manager.OutputManager": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1}, "nn_tuning.storage.database.Database": {"tf": 1}, "nn_tuning.storage.table.Table": {"tf": 1.4142135623730951}}, "df": 12}, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning": {"tf": 2.23606797749979}, "nn_tuning.fitting_manager.FittingManager": {"tf": 1.4142135623730951}, "nn_tuning.output_manager.OutputManager": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}}, "df": 5}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager": {"tf": 1.4142135623730951}, "nn_tuning.output_manager.OutputManager": {"tf": 1.7320508075688772}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 2.23606797749979}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.remove_table": {"tf": 1}}, "df": 8}}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {"nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1.4142135623730951}}, "df": 2, "u": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {"nn_tuning": {"tf": 3.1622776601683795}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet": {"tf": 1}, "nn_tuning.networks.alexnet.AlexNet.run": {"tf": 1.4142135623730951}, "nn_tuning.networks.network.Network.run": {"tf": 1.4142135623730951}, "nn_tuning.networks.prednet.Prednet": {"tf": 1.4142135623730951}, "nn_tuning.networks.prednet.Prednet.run": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 2.23606797749979}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1.7320508075688772}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1.4142135623730951}}, "df": 15}, "u": {"docs": {"nn_tuning": {"tf": 2.8284271247461903}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.stimulus_description": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.stimulus_description": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}}, "df": 12, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 3.1622776601683795}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}}, "df": 3}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.input_manager.InputManager": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}, "nn_tuning.input_manager.InputManager": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}}, "df": 5}}}}}}}}}, "_": {"docs": {}, "df": 0, "x": {"docs": {"nn_tuning": {"tf": 3.872983346207417}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.7320508075688772}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1.7320508075688772}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}}, "df": 5, "*": {"docs": {}, "df": 0, "*": {"docs": {}, "df": 0, "x": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {"nn_tuning": {"tf": 3.872983346207417}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.7320508075688772}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}}, "df": 5}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1}, "nn_tuning.storage.database.Database": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet.get_subtable": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1.4142135623730951}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.networks.network.Network.run": {"tf": 1.4142135623730951}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.print_structure": {"tf": 1}}, "df": 7}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1.7320508075688772}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 2.8284271247461903}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}, "nn_tuning.plot.show": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}, "nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1.7320508075688772}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}}, "df": 10, "_": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}}, "df": 3}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}, "nn_tuning.storage.table.Table": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}, "f": {"docs": {"nn_tuning": {"tf": 5.291502622129181}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1.7320508075688772}}, "df": 2}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.statistics_helper.llincc": {"tf": 1}, "nn_tuning.storage.table.Table": {"tf": 2}, "nn_tuning.storage.table_set.TableSet": {"tf": 2}}, "df": 4, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.table_set.TableSet.initialise": {"tf": 2.6457513110645907}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 2}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 3.872983346207417}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}, "nn_tuning.input_manager.InputManager": {"tf": 1.4142135623730951}, "nn_tuning.networks.alexnet.AlexNet": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1.7320508075688772}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.generate": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.stimulus_description": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1.7320508075688772}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.generate": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1}, "nn_tuning.storage.table.Table.shape": {"tf": 1}, "nn_tuning.storage.table.Table.initialised": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.shape": {"tf": 1}}, "df": 14, "[": {"0": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}}, "df": 1}, "1": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.plot.show": {"tf": 1}}, "df": 2, "n": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1.4142135623730951}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 3}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1}, "nn_tuning.input_manager.InputManager.valid": {"tf": 1}, "nn_tuning.input_manager.InputManager.get": {"tf": 1}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1}}, "df": 9, "_": {"docs": {}, "df": 0, "x": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}, "i": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"nn_tuning": {"tf": 2.449489742783178}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.init_parameter_set": {"tf": 1.4142135623730951}}, "df": 5, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 1}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.7320508075688772}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning.networks.prednet.Prednet": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 2.449489742783178}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1.7320508075688772}}, "df": 5}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.input_manager.InputManager": {"tf": 1}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1}, "nn_tuning.output_manager.OutputManager": {"tf": 1.4142135623730951}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1}, "nn_tuning.plot.show": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.generate": {"tf": 1}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1.7320508075688772}, "nn_tuning.stimulus_generator.stimulus_generator.StimulusGenerator.generate": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}}, "df": 15, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 2.23606797749979}}, "df": 2}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator.plot_image": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.storage.table.Table": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}, "b": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.table_set.TableSet.recurrent_subtables": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.networks.network.Network.run": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 2}, "nn_tuning.storage.table_set.TableSet": {"tf": 1.7320508075688772}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.nrows": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.ncols": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.subtables": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.recurrent_subtables": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.ncols_tuple": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.get_subtable": {"tf": 1}}, "df": 13, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1}}, "df": 2}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}, "e": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 2}}, "df": 1, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"nn_tuning": {"tf": 2}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning.networks.network.Network": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.networks.network.Network.run": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.storage.table.Table": {"tf": 2.23606797749979}, "nn_tuning.storage.table_set.TableSet": {"tf": 2.6457513110645907}}, "df": 3}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 1}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 4.69041575982343}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"nn_tuning.storage.storage_manager.StorageManager": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 2.23606797749979}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.4142135623730951}}, "df": 4}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning.fitting_manager.FittingManager.calculate_best_fits": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 4}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.generate": {"tf": 1}, "nn_tuning.storage.table.Table.initialise": {"tf": 1.4142135623730951}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 2}}, "df": 5, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.output_manager.OutputManager": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "=": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.storage.table_set.TableSet.initialise": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 1}}, "df": 2, "_": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.open_table": {"tf": 1}}, "df": 2}}}, "r": {"docs": {"nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1.4142135623730951}}, "df": 2}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 2.23606797749979}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 2}, "nn_tuning.networks.network.Network.extract_numpy_array": {"tf": 1.4142135623730951}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}, "nn_tuning.output_manager.OutputManager.run": {"tf": 1.7320508075688772}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.prf_stimulus_generator.PRFStimulusGenerator": {"tf": 1.4142135623730951}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 2.23606797749979}, "nn_tuning.storage.table.Table.initialise": {"tf": 1.7320508075688772}, "nn_tuning.storage.table_set.TableSet": {"tf": 1.7320508075688772}, "nn_tuning.storage.table_set.TableSet.initialise": {"tf": 2}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 13}}}}}, "n": {"docs": {"nn_tuning": {"tf": 2.23606797749979}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator": {"tf": 1}, "nn_tuning.storage.table_set.TableSet": {"tf": 1}, "nn_tuning.storage.table_set.TableSet.append_rows": {"tf": 1}}, "df": 5, "c": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning.output_manager.OutputManager.run": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning.output_manager.OutputManager.run": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1}}, "df": 2}}}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning.plot.show": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning.storage.table.Table": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.4142135623730951}}, "df": 2}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning.networks.network.Network.is_tf_one": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}, "f": {"docs": {"nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1.4142135623730951}, "nn_tuning.storage.storage_manager.StorageManager": {"tf": 1}, "nn_tuning.storage.table.Table": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"nn_tuning": {"tf": 4.47213595499958}}, "df": 1, "_": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {"nn_tuning": {"tf": 2.23606797749979}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nn_tuning.networks.prednet.Prednet": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.networks.prednet.Prednet": {"tf": 1}}, "df": 2}}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.storage.storage_manager.StorageManager.save_result_table_set": {"tf": 1.7320508075688772}}, "df": 2}}}}, "x": {"docs": {"nn_tuning": {"tf": 2.6457513110645907}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.7320508075688772}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 2.23606797749979}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.linearise_sigma": {"tf": 1}, "nn_tuning.statistics_helper.llincc": {"tf": 1.4142135623730951}}, "df": 7, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"nn_tuning": {"tf": 2.449489742783178}, "nn_tuning.fitting_manager.FittingManager.fit_response_function_on_table_set": {"tf": 1.7320508075688772}, "nn_tuning.fitting_manager.FittingManager.fit_response_function": {"tf": 2}, "nn_tuning.fitting_manager.FittingManager.generate_fake_responses": {"tf": 1}, "nn_tuning.fitting_manager.FittingManager.test_response_fitting": {"tf": 1}, "nn_tuning.statistics_helper.llincc": {"tf": 1.4142135623730951}}, "df": 6, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"nn_tuning.stimulus_generator.numerosity_stimulus_generator.NumerosityStimulusGenerator.__init__": {"tf": 1}}, "df": 1}}, "_": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}, "_": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "_": {"docs": {"nn_tuning": {"tf": 2.23606797749979}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"nn_tuning": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"nn_tuning": {"tf": 1.7320508075688772}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"2": {"docs": {}, "df": 0, "d": {"docs": {"nn_tuning": {"tf": 1}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1.4142135623730951}}, "df": 2}}, "docs": {}, "df": 0}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"nn_tuning": {"tf": 1.4142135623730951}, "nn_tuning.stimulus_generator.two_d_stimulus_generator.TwoDStimulusGenerator": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}}}}}}, "pipeline": ["trimmer", "stopWordFilter", "stemmer"], "_isPrebuiltIndex": true}